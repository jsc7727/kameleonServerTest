{"version":3,"sources":["../node_modules/caver-js/packages sync /^/.*/src/index/.js$","assets/images/bg.jpg","GlobalStyle.tsx","assets/images/m-logo.png","assets/images/logo.png","components/common/Layout.style.tsx","store/user.tsx","components/common/Header.tsx","components/common/Footer.tsx","pages/styles/SwapPage.styles.tsx","components/portal/ToastPortal.tsx","components/Input/styles/MultipleInput.styles.tsx","constants/index.ts","utils/KAS.ts","components/Input/SwapInput.tsx","hooks/useInput.tsx","pages/SwapPage.tsx","pages/styles/MainPage.styles.tsx","components/StockLogo/StockLogo.style.tsx","components/StockLogo/StockLogo.tsx","pages/MainPage.tsx","utils/bithumbSocket.ts","pages/styles/PoolPage.styles.tsx","pages/PoolPage.tsx","pages/styles/LiquidityPage.styles.tsx","components/Input/styles/LiquidityInput.styles.tsx","components/Input/LiquidityInput.tsx","components/Input/styles/LiquidityRemoveInput.styles.tsx","components/Input/LiquidityRemoveInput.tsx","hooks/useButton.tsx","pages/LiquidityPage.tsx","pages/styles/MintPage.styles.tsx","components/Input/styles/SingleInput.styles.tsx","components/Input/SingleInput.tsx","components/Input/MultipleInput.tsx","pages/MintPage.tsx","pages/styles/MyPage.styles.tsx","components/MyPage/MyPagePoolItem.tsx","utils/abiTypeFilter.ts","components/MyPage/MyPageGovern.tsx","pages/MyPage.tsx","pages/styles/GovernPage.styles.tsx","components/portal/ModalPortal.styles.tsx","components/portal/ModalPortal.tsx","hooks/useModal.tsx","components/Input/styles/GovernInput.styles.tsx","components/Input/GovernInput.tsx","components/Chart/DoughnutChart.tsx","components/Govern/PollModal.tsx","hooks/QueryHooks/Govern.tsx","components/Govern/Poll.tsx","components/Govern/CreatePoll.tsx","pages/GovernPage.tsx","assets/snake2.svg","assets/backgroundKameleon.svg","assets/Kameleon.svg","assets/Line.svg","assets/Mosquito.svg","components/Parallax/styles/ParallaxContainer.styles.tsx","components/Parallax/ParallaxContainer.tsx","App.tsx","utils/axiosIntercepter.ts","store/store.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","GlobalStyle","createGlobalStyle","AppStyle","styled","main","bgImage","MainStyle","HeaderStyle","header","LogoStyle","h1","logoImage","mobLogoImage","NavStyle","nav","FooterStyle","footer","selectUser","state","user","userSlice","createSlice","name","initialState","isLogin","account","klayPrice","reducers","login","action","payload","onSelectNav","logout","getKlayPrice","actions","Header","useState","isNav","setIsNav","dispatch","useDispatch","useSelector","onConnectWallet","a","window","klaytn","isKaikas","enable","accounts","alert","useEffect","checkUnlocked","_kaikas","isUnlocked","selectedAddress","className","to","onClick","icon","faBars","faXmark","faUser","slice","type","faWallet","Footer","href","faGithub","SwapPageWrapper","div","DetailInfoStyle","dl","IconWrapper","ButtonWrapper","button","props","numberA","numberB","isErrorA","isErrorB","ToastPortal","toast","ReactDOM","createPortal","document","body","MultipleInputContainer","isError","isFocus","MultipleInputWrapper","MultipleInputBlank","MultipleInputList","ul","abiTable","Exchange","abi","Factory","Kameleon","KStockToken","Oracle","Govern","contractAddressTable","data","bytecode","object","exchangeAddressTable","kSSE","kLGE","kKKO","kSSB","kSSH","kStockTokenAddressTable","kStockTokenCodeTable","logoTable","KLAY","callCaver","Caver","caver","callIsApproved","stockName","callContract","contractName","contractAddress","methodName","parameters","res","length","sendApprove","sendContract","result","undefined","kaikas","contract","klay","Contract","call","from","gas","receipt","create","callResult","amount","myContract","methods","send","value","utils","convertToPeb","blockHash","getBalance","address","balance","angleUp","faAngleUp","angleDown","faAngleDown","SwapInput","children","tokenName","setTokenName","tokenBalance","isBlankError","isDecimalError","setKey","isChange","setIsChange","setTokenBalance","setIsFocus","changeInput","onCalculateInput","params","useParams","isOpen","setIsOpen","tokenList","setTokenList","maxValue","setMaxValue","tList","Array","symbolTable","i","token","push","then","Number","toFixed","clickDownIcon","useCallback","clickUpIcon","clickItem","htmlFor","placeholder","autoComplete","onKeyDown","key","onChange","target","onFocus","onBlur","el","useInput","decimal","setIsBlankError","setIsDecimalError","parseInt","split","n","match","arrowDown","faArrowDown","amountKlay","amountToken","SwapPage","setToken","nameA","setNameA","nameB","setNameB","isApproveA","setIsApproveA","fee","setFee","successNotify","success","failNotify","error","tokenBalanceA","isFocusA","isBlankErrorA","isDecimalErrorA","isChangeA","setIsChangeA","setTokenBalanceA","setKeyA","setIsFocusA","changeInputA","swapInputPropsA","tokenBalanceB","isFocusB","isBlankErrorB","isDecimalErrorB","isChangeB","setIsChangeB","setTokenBalanceB","setKeyB","setIsFocusB","changeInputB","swapInputPropsB","swapSelector","klayToTokenInputA","swapTokenAmount","tokenToKlayInputA","swapKlayAmount","onCalculateInputA","changeTokenA","changeKlay","toString","doNothing","includes","onApprove","onSwap","MainPageWrapper","MainPageSearch","MainPageList","MainPageItem","li","StockLogoStyle","img","StockLogo","src","process","MainPage","inputString","setInputString","stockList","setStockList","currentKlayPrice","wsInstance","setWsInstance","ws","WebSocket","klaytnPrice","getDefaultPrice","axios","get","closing_price","onopen","JSON","stringify","symbols","tickTypes","onmessage","parse","content","closePrice","close","useKlaySocket","updateList","tempList","mapList","method","url","stockAPI","stockData","keyArr","valueArr","values","String","Promise","all","item","oraclePrice","idx","findIndex","codeNumber","nowValue","klayAmount","premium","krwPrice","Math","floor","onLoadData","lst","magnifyingGlass","faMagnifyingGlass","style","color","filter","v","trim","index","toLocaleString","fromCharCode","PoolPageWrapper","PoolPageList","PoolPageItem","PoolPage","poolList","isLoading","setPoolList","callPoolList","exchangeAddressList","klayBalance","exchangeAddress","pool","liquid","change","roi","height","count","LiquidityPageWrapper","TabStyle","span","OutputWrapper","balanceA","balanceB","SingleInputContainer","SingleInputWrapper","LiquidityInput","liftState","otherBalance","otherChange","isKlay","ratio","numberOfDecimal","setName","maxBalance","setMaxBalance","LiquidityRemoveInput","catch","useButton","addButton","toBN","removeButton","connectButton","approveButton","plus","faPlus","LiquidityPage","tab","setTab","isApprove","setIsApprove","addRatio","setAddRatio","kStockBalance","removeRatio","setRemoveRatio","klayToken","setKlayToken","kStockToken","setKStockToken","lpToken","setLPToken","liftKlayToken","liftKStockToken","liftLPToken","checkApprove","callAmount","calculateOutput","kStockName","lpAmount","poolKlay","poolKStock","totalLP","MintPageWrapper","SingleInput","otherPrice","MultipleInput","tokenPrice","setTokenPrice","price","MintPage","setBalanceA","setBalanceB","priceA","setPriceA","priceB","setPriceB","setIsDecimalErrorA","setIsDecimalErrorB","detailInfo","setDetailInfo","liftStateA","liftStateB","clickButton","MyPageWrapper","MyPageList","MyPageItem","MyPageBar","calcPercent","yes","totalSupply","no","MyPagePoolItem","React","setRoi","navigate","useNavigate","getPoolRoi","getMethodReturnStructType","getParsedDataFromUsingMethodType","temp","forEach","MyPageGovern","governList","setGovernList","test","getPollsLength","pollState","withdrawableBalance","pollStateObj","pollId","title","agree","disagree","endTime","fromNow","MyPage","myList","setMyList","myPoolList","setMyPoolList","getMyList","valueTemp","nameTable","tokenPriceList","getPoolList","promiseGetEachBalance","poolToSearch","entries","pair","myTempPool","promiseTemp","convertFromPeb","sort","b","GovernPageWrapper","GovernPageGovernList","GovernPagePollList","GovernPagePollItem","isExpired","enoughQuorum","GovernPageBar","GoverQuorum","percentage","GovernPageModalContent","ModalBackDrop","ModalWrapper","width","ModalHeader","ModalCloseButton","xMark","ModalPortal","closeModal","modalContent","modal","useModal","toggle","PollForm","PollWrapper","PollLabel","label","isAgree","PollInput","input","GovernInput","setIsAgree","yesFocus","setYesFocus","noFocus","setNoFocus","buttonOnClickHander","hidden","DoughnutChart","labels","datasets","backgroundColor","hoverOffset","reverse","options","maintainAspectRatio","PollModal","createdTime","expired","now","Date","getTime","refetchInterval","useQuery","WithdrawableBalanceQueryHooks","isSuccess","withdrawBalanceHander","readOnly","format","Poll","eTime","isNotExpired","faCheckToSlot","faCheck","fontSize","CreatePoll","setTitle","setContent","day","setDay","createPollHander","GovernPage","tokenState","governAddress","TotalStakedBalanceHooks","myStakeBalance","staked","stakable","MyStakeBalanceHooks","totalSupplyResult","pollListTypeArray","objResult","GovernQueryHooks","ParallaxContainerWrapper","Styled","ChameleonContainer","SnakeContainer","layers","image","backgroundKameleon","dataDepth","kameleon","line","mosquito","layers2","snake2","ParallaxImagesContainer","getElementById","snake","Parallax","l","alt","Animation","location","useLocation","displayLocation","setDisplayLocation","transitionStage","setTransistionStage","onAnimationEnd","path","element","App","ParallaxContainer","interceptors","request","use","config","reject","response","combineReducers","userReducer","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","devTools","middleware","thunk","queryClient","QueryClient","persistor","persistStore","createRoot","render","StrictMode","client","initialIsOpen"],"mappings":"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","file":"static/js/main.c0f17bc8.chunk.js","sourcesContent":["var map = {\n\t\"./caver-abi/src/index.js\": 150,\n\t\"./caver-account/src/index.js\": 85,\n\t\"./caver-contract/src/index.js\": 101,\n\t\"./caver-core-helpers/src/index.js\": 47,\n\t\"./caver-core-method/src/index.js\": 77,\n\t\"./caver-core-requestmanager/caver-providers-http/src/index.js\": 342,\n\t\"./caver-core-requestmanager/caver-providers-ipc/src/index.js\": 346,\n\t\"./caver-core-requestmanager/caver-providers-ws/src/index.js\": 341,\n\t\"./caver-core-requestmanager/src/index.js\": 339,\n\t\"./caver-core-subscriptions/src/index.js\": 138,\n\t\"./caver-core/src/index.js\": 65,\n\t\"./caver-ipfs/src/index.js\": 349,\n\t\"./caver-kct/src/index.js\": 411,\n\t\"./caver-klay/caver-klay-accounts/src/index.js\": 414,\n\t\"./caver-klay/caver-klay-personal/src/index.js\": 417,\n\t\"./caver-klay/src/index.js\": 418,\n\t\"./caver-middleware/src/index.js\": 222,\n\t\"./caver-net/src/index.js\": 267,\n\t\"./caver-rpc/src/index.js\": 419,\n\t\"./caver-rtm/src/index.js\": 144,\n\t\"./caver-transaction/src/index.js\": 420,\n\t\"./caver-utils/iban/src/index.js\": 335,\n\t\"./caver-utils/promievent/src/index.js\": 334,\n\t\"./caver-utils/src/index.js\": 15,\n\t\"./caver-validator/src/index.js\": 421,\n\t\"./caver-wallet/src/index.js\": 246\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 475;","export default __webpack_public_path__ + \"static/media/bg.0d4a9f2d.jpg\";","import { createGlobalStyle } from 'styled-components';\r\nimport styled from 'styled-components';\r\nimport bgImage from './assets/images/bg.jpg';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  :root {\r\n    --light-green: #92e5d0;\r\n    --green: #41A58D;\r\n    --dark-green: #276955;\r\n    --deep-green: #133027;\r\n    --black: #000000;\r\n    --white: #ffffff;\r\n    --blue: #6675FF;\r\n    --red: #FF6363;\r\n    --gray: #999;\r\n\r\n    --width: 1200px;\r\n    --s-width: 640px;\r\n    --m-size: 760px;\r\n\r\n    --shadowSharp: 0 1px 1px rgb(0 0 0 / 25%), 0 2px 2px rgb(0 0 0 / 20%),\r\n      0 4px 4px rgb(0 0 0 / 15%), 0 8px 8px rgb(0 0 0 / 10%),\r\n      0 16px 16px rgb(0 0 0 / 5%);\r\n  }\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    min-width: 320px;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n  * { font-family: 'Noto Sans', 'Noto Sans KR',sans-serif; font-size: 18px; }\r\n  a { cursor: pointer; text-decoration: none; }\r\n  h1, h2, h3, h4, ol, ul, dl, dt, dd { margin: 0; padding: 0; }\r\n  ol, ul { list-style: none; }\r\n\r\n  .layout {\r\n    max-width: 1200px;\r\n    padding: 0 24px;\r\n    margin: auto;\r\n  }\r\n\r\n  .tit {\r\n    padding: 1rem 0;\r\n    color: var(--white);\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  @media (max-width: 760px) {\r\n    * { font-size: 14px; }\r\n  }\r\n`;\r\n\r\nexport const AppStyle = styled.main`\r\n  min-height: 100vh;\r\n  /* background-color: var(--dark-green); */\r\n  background: linear-gradient(\r\n      rgba(39, 105, 85, 0.5) 100%,\r\n      rgba(39, 105, 85, 0.5) 100%\r\n    ),\r\n    url(${bgImage});\r\n  background-size: 50%;\r\n  z-index: 1;\r\n  & > div {\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n\r\n  .fadeIn {\r\n    animation: 0.5s fadeIn forwards;\r\n  }\r\n\r\n  .fadeOut {\r\n    animation: 0.5s fadeOut forwards;\r\n  }\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n      transform: translate(-20px, 0);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translate(0px, 0px);\r\n    }\r\n  }\r\n\r\n  @keyframes fadeOut {\r\n    from {\r\n      opacity: 1;\r\n      transform: translate(0px, 0px);\r\n    }\r\n    to {\r\n      transform: translate(-20px, 0);\r\n      opacity: 0;\r\n    }\r\n    /* =======\r\n  background-image: url(${bgImage});\r\n  background-size: 100%;\r\n\r\n  & > div {\r\n    height: 100vh;\r\n    background-color: rgba(19, 48, 39, 0.8);\r\n>>>>>>> 1d9318704fc434344ed13957d598ebc71edc1a98 */\r\n  }\r\n`;\r\n\r\nexport const MainStyle = styled.main`\r\n  min-height: calc(100vh - 125px);\r\n  box-sizing: border-box;\r\n\r\n  &.layout {\r\n    padding-top: 1rem;\r\n  }\r\n\r\n  @media (max-width: 760px) {\r\n    min-height: calc(100vh - 105px);\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/m-logo.8eefb56c.png\";","export default __webpack_public_path__ + \"static/media/logo.9deaebdb.png\";","import styled from 'styled-components';\r\nimport mobLogoImage from '../../assets/images/m-logo.png';\r\nimport logoImage from '../../assets/images/logo.png';\r\n\r\nconst HeaderStyle = styled.header`\r\n  width: 100%;\r\n\r\n  .layout {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: left;\r\n    width: 100%;\r\n    height: 80px;\r\n  }\r\n\r\n  @media only screen and (max-width: 760px) {\r\n    .layout {\r\n      height: 60px;\r\n    }\r\n    .utils {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LogoStyle = styled.h1`\r\n  width: 140px;\r\n  a {\r\n    display: block;\r\n    padding-top: 80px;\r\n    font-size: 0;\r\n    background-image: url(${logoImage});\r\n    background-repeat: no-repeat;\r\n    background-size: 100%;\r\n    background-position: center;\r\n  }\r\n\r\n  @media only screen and (max-width: 760px) {\r\n    width: 60px;\r\n    a {\r\n      padding-top: 60px;\r\n      background-image: url(${mobLogoImage});\r\n      background-size: 60%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavStyle = styled.nav`\r\n  width: calc(100% - 140px);\r\n  height: 100%;\r\n\r\n  .menu-list {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n\r\n    & > ul {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: 80%;\r\n      height: 100%;\r\n    }\r\n    li {\r\n      padding: 0 15px;\r\n      a {\r\n        display: block;\r\n        color: #41a58d;\r\n        font-size: 1.3rem;\r\n      }\r\n\r\n      transition: all 0.5s;\r\n\r\n      &:hover {\r\n        a {\r\n          color: #fff;\r\n        }\r\n      }\r\n\r\n      &.on {\r\n        a {\r\n          color: #fff;\r\n          font-weight: 700;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .utils {\r\n    display: block;\r\n    margin-left: auto;\r\n\r\n    & > a,\r\n    & > button {\r\n      display: inline-block;\r\n      padding: 0.4rem 1.5rem;\r\n      min-width: 140px;\r\n      background-color: transparent;\r\n      border: 2px solid var(--green);\r\n      border-radius: 4rem;\r\n      color: var(--green);\r\n      font-size: 0.8rem;\r\n      font-weight: 700;\r\n\r\n      &.on {\r\n        color: var(--white);\r\n        border: 2px solid var(--white);\r\n      }\r\n\r\n      & em {\r\n        margin-right: 0.6rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  .m-menu {\r\n    display: none;\r\n    margin-left: auto;\r\n    padding: 0.4rem;\r\n    font-size: 1.5rem;\r\n    color: var(--white);\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn-close {\r\n    display: none;\r\n    position: absolute;\r\n    top: 24px;\r\n    right: 24px;\r\n    color: var(--white);\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n    z-index: 1;\r\n  }\r\n\r\n  @media only screen and (max-width: 760px) {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: auto;\r\n\r\n    .m-menu,\r\n    .btn-close {\r\n      display: block;\r\n    }\r\n\r\n    .menu-list {\r\n      display: none;\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      min-width: 100%;\r\n      min-height: 100vh;\r\n      background-color: rgba(0, 0, 0, 0.5);\r\n      z-index: 1;\r\n\r\n      &.on {\r\n        display: block;\r\n      }\r\n\r\n      & > ul {\r\n        display: block;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        width: 50%;\r\n        height: 100%;\r\n        padding: 7rem 2rem 3rem;\r\n        text-align: right;\r\n        background-color: var(--deep-green);\r\n      }\r\n\r\n      & li {\r\n        margin-top: 1.5rem;\r\n\r\n        :first-child {\r\n          margin-top: 0;\r\n        }\r\n      }\r\n\r\n      .utils {\r\n        position: absolute;\r\n        top: 8px;\r\n        right: 5%;\r\n        width: 40%;\r\n        margin: auto;\r\n        padding: 1rem 0;\r\n        text-align: left;\r\n        border-bottom: 1px solid var(--white);\r\n\r\n        a {\r\n          min-width: 120px;\r\n          color: var(--white);\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FooterStyle = styled.footer`\r\n  padding: 12px 0;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #fff;\r\n\r\n  a {\r\n    color: #fff;\r\n    margin-left: 5px;\r\n  }\r\n\r\n  .m-copyright {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 760px) {\r\n    .copyright {\r\n      display: none;\r\n    }\r\n    .m-copyright {\r\n      display: inline-block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { HeaderStyle, LogoStyle, NavStyle, FooterStyle };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface RootState {\r\n  user: {\r\n    isLogin: boolean;\r\n    account: string;\r\n    nav: string;\r\n  };\r\n}\r\n\r\nexport const selectUser = (state: RootState) => state.user;\r\n\r\nconst initialState = {\r\n  isLogin: false as boolean,\r\n  account: '' as string,\r\n  nav: 'home' as string,\r\n  klayPrice: 0 as number,\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    login: (\r\n      state: { isLogin: boolean; account: string },\r\n      action: { payload: string }\r\n    ) => {\r\n      state.isLogin = true;\r\n      state.account = action.payload;\r\n    },\r\n    onSelectNav: (state: { nav: string }, action: { payload: string }) => {\r\n      state.nav = action.payload;\r\n    },\r\n    logout: (state: { isLogin: boolean; account: string }) => {\r\n      state.isLogin = false;\r\n      state.account = '';\r\n    },\r\n    getKlayPrice: (\r\n      state: { klayPrice: number },\r\n      action: { payload: string }\r\n    ) => {\r\n      state.klayPrice = +action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout, onSelectNav } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HeaderStyle, LogoStyle, NavStyle } from './Layout.style';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faBars,\r\n  faXmark,\r\n  faWallet,\r\n  faUser,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login, logout, onSelectNav, selectUser } from '../../store/user';\r\n\r\nconst Header = () => {\r\n  const [isNav, setIsNav] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const nav = user.nav;\r\n\r\n  const onConnectWallet = async () => {\r\n    if (typeof window.klaytn !== 'undefined') {\r\n      if (window.klaytn.isKaikas) {\r\n        const accounts = await window.klaytn.enable();\r\n        dispatch(login(accounts[0]));\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    } else {\r\n      dispatch(logout());\r\n      alert('Kaikas 설치하시기 바랍니다.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkUnlocked = async () => {\r\n      const isUnlokced = await window.klaytn._kaikas.isUnlocked();\r\n      if (!isUnlokced) {\r\n        dispatch(logout());\r\n      } else {\r\n        const address = await window.klaytn.selectedAddress;\r\n        if (address !== user.account) {\r\n          dispatch(logout());\r\n        }\r\n      }\r\n    };\r\n\r\n    checkUnlocked();\r\n  }, [dispatch, user.account]);\r\n\r\n  return (\r\n    <HeaderStyle>\r\n      <div className=\"layout\">\r\n        <LogoStyle>\r\n          <Link to=\"/\" onClick={() => dispatch(onSelectNav('home'))}>\r\n            Kameleon\r\n          </Link>\r\n        </LogoStyle>\r\n        <NavStyle>\r\n          <span className=\"m-menu\" onClick={() => setIsNav(true)}>\r\n            <FontAwesomeIcon icon={faBars} />\r\n          </span>\r\n          <div className={`menu-list ${isNav ? 'on' : ''}`}>\r\n            <ul>\r\n              <li\r\n                className={nav === 'home' ? 'on' : ''}\r\n                onClick={() => dispatch(onSelectNav('home'))}\r\n              >\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li\r\n                className={nav === 'swap' ? 'on' : ''}\r\n                onClick={() => dispatch(onSelectNav('swap'))}\r\n              >\r\n                <Link to=\"/swap\">Swap</Link>\r\n              </li>\r\n              <li\r\n                className={nav === 'pool' ? 'on' : ''}\r\n                onClick={() => dispatch(onSelectNav('pool'))}\r\n              >\r\n                <Link to=\"/pool\">Pool</Link>\r\n              </li>\r\n              <li\r\n                className={nav === 'mint' ? 'on' : ''}\r\n                onClick={() => dispatch(onSelectNav('mint'))}\r\n              >\r\n                <Link to=\"/mint\">Mint&Burn</Link>\r\n              </li>\r\n              <li\r\n                className={nav === 'govern' ? 'on' : ''}\r\n                onClick={() => dispatch(onSelectNav('govern'))}\r\n              >\r\n                <Link to=\"/govern\">Govern</Link>\r\n              </li>\r\n            </ul>\r\n            <span className=\"btn-close\" onClick={() => setIsNav(false)}>\r\n              <FontAwesomeIcon icon={faXmark} />\r\n            </span>\r\n            <span className=\"utils\">\r\n              {!user.isLogin ? (\r\n                <button type=\"button\" onClick={onConnectWallet}>\r\n                  <em>\r\n                    <FontAwesomeIcon icon={faWallet} />\r\n                  </em>\r\n                  Connect\r\n                </button>\r\n              ) : (\r\n                <>\r\n                  <Link\r\n                    to=\"/mypage\"\r\n                    className={nav === 'mypage' ? 'on' : ''}\r\n                    onClick={() => dispatch(onSelectNav('mypage'))}\r\n                  >\r\n                    <em>\r\n                      <FontAwesomeIcon icon={faUser} />\r\n                    </em>\r\n                    {user.account.slice(0, 5)}...\r\n                  </Link>\r\n                </>\r\n              )}\r\n            </span>\r\n          </div>\r\n        </NavStyle>\r\n      </div>\r\n    </HeaderStyle>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { FooterStyle } from './Layout.style';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterStyle>\r\n      <span className=\"copyright\">\r\n        copyright(c) 2022 All rights reserved by Kameleon |\r\n      </span>\r\n      <span className=\"m-copyright\">copyright(c) 2022 by Kameleon |</span>\r\n      <a href=\"https://github.com/codestates/beb-03-Kameleon\">\r\n        <FontAwesomeIcon icon={faGithub} />\r\n      </a>\r\n    </FooterStyle>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\n\r\nconst SwapPageWrapper = styled.div`\r\n  max-width: var(--s-width);\r\n  margin: auto;\r\n\r\n  & > form {\r\n    padding: 1rem 2rem;\r\n    background-color: var(--white);\r\n    border-radius: 1rem;\r\n  }\r\n`;\r\n\r\nconst DetailInfoStyle = styled.dl`\r\n  margin-top: 1.5rem;\r\n  padding: 1rem;\r\n  border-top: 1px solid var(--green);\r\n\r\n  & > div {\r\n    display: flex;\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  & dt {\r\n    width: 35%;\r\n    color: var(--gray);\r\n  }\r\n\r\n  & dd {\r\n    width: 65%;\r\n    color: var(--green);\r\n    font-weight: 700;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 1rem 0;\r\n  color: var(--blue);\r\n`;\r\n\r\nexport const ButtonWrapper = styled.button<{\r\n  numberA: number;\r\n  numberB: number;\r\n  isErrorA: boolean;\r\n  isErrorB: boolean;\r\n}>`\r\n  display: block;\r\n  padding: 1rem 2rem;\r\n  margin: auto;\r\n  margin-top: 1.5rem;\r\n  width: 100%;\r\n  color: var(--white);\r\n  font-weight: 700;\r\n  font-size: 1rem;\r\n  background-color: var(--dark-green);\r\n  border-radius: 1rem;\r\n  border: 0;\r\n  opacity: ${(props) =>\r\n    props.numberA > 0 && props.numberB > 0 && !props.isErrorA && !props.isErrorB\r\n      ? ''\r\n      : '0.7'};\r\n\r\n  :hover {\r\n    cursor: ${(props) =>\r\n      props.numberA > 0 &&\r\n      props.numberB > 0 &&\r\n      !props.isErrorA &&\r\n      !props.isErrorB\r\n        ? 'pointer'\r\n        : ''};\r\n  }\r\n`;\r\n\r\nexport { SwapPageWrapper, DetailInfoStyle };\r\n","import ReactDOM from 'react-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nconst ToastPortal = () => {\r\n  const toast = (\r\n    <>\r\n      <ToastContainer icon={false} />\r\n    </>\r\n  );\r\n\r\n  return ReactDOM.createPortal(toast, document.body);\r\n};\r\n\r\nexport default ToastPortal;\r\n","import styled from 'styled-components';\r\n\r\nexport const MultipleInputContainer = styled.div<{\r\n  isFocus: boolean;\r\n  isError: boolean;\r\n}>`\r\n  & > div {\r\n    border: 2px solid\r\n      ${(props) =>\r\n        props.isError\r\n          ? 'var(--red)'\r\n          : props.isFocus\r\n          ? 'var(--blue)'\r\n          : 'var(--green)'};\r\n    border-radius: 1rem;\r\n    box-shadow: var(--shadowSharp);\r\n    background-color: var(--green);\r\n    padding: 1rem 1.5rem;\r\n  }\r\n\r\n  & > div > section {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & > div > section > label {\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: var(--dark-green);\r\n  }\r\n\r\n  & > section {\r\n    margin-top: 0.2rem;\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: var(--red);\r\n    text-align: right;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    padding: 0.5rem 0.5rem;\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MultipleInputWrapper = styled.div`\r\n  display: flex;\r\n\r\n  & > section {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  /* temp */\r\n  & > section > img {\r\n    margin-right: 0.5%;\r\n  }\r\n\r\n  & > section > div {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n  }\r\n\r\n  & > input {\r\n    flex: auto;\r\n    width: 100%;\r\n    height: 2rem;\r\n    border: 0;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n    background-color: var(--green);\r\n    outline: none;\r\n    text-align: right;\r\n\r\n    ::placeholder {\r\n      color: var(--dark-green);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MultipleInputBlank = styled.div`\r\n  margin: 0 -1.5rem;\r\n  height: 1rem;\r\n  border-bottom: 1px solid var(--dark-green);\r\n`;\r\n\r\nexport const MultipleInputList = styled.ul`\r\n  margin: 0 -1.5rem;\r\n  height: 20rem;\r\n  overflow-y: scroll;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  & > li {\r\n    color: var(--white);\r\n    padding: 1.5rem 1.5rem;\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n      background-color: var(--dark-green);\r\n    }\r\n  }\r\n`;\r\n","import Exchange from './../contracts/artifacts/Exchange.json';\r\nimport Factory from './../contracts/artifacts/Factory.json';\r\nimport Kameleon from './../contracts/artifacts/Kameleon.json';\r\nimport KStockToken from './../contracts/artifacts/KStockToken.json';\r\nimport Oracle from './../contracts/artifacts/Oracle.json';\r\nimport Govern from './../contracts/artifacts/Govern.json';\r\n\r\ninterface abiType {\r\n  [key: string]: Array<any>;\r\n}\r\n\r\ninterface byteCodeType {\r\n  [key: string]: string;\r\n}\r\n\r\nexport const abiTable: abiType = {\r\n  Exchange: Exchange?.abi,\r\n  Factory: Factory?.abi,\r\n  Kameleon: Kameleon?.abi,\r\n  KStockToken: KStockToken?.abi,\r\n  Oracle: Oracle?.abi,\r\n  Govern: Govern?.abi,\r\n};\r\n\r\nexport const byteCodeTable: byteCodeType = {\r\n  Exchange: Exchange?.data?.bytecode?.object,\r\n  Factory: Factory?.data?.bytecode?.object,\r\n  Kameleon: Kameleon?.data?.bytecode?.object,\r\n  KStockToken: KStockToken?.data?.bytecode?.object,\r\n  Oracle: Oracle?.data?.bytecode?.object,\r\n  Govern: Govern?.data?.bytecode?.object,\r\n};\r\n\r\nexport const contractAddressTable: { [x: string]: string } = {\r\n  Oracle: '0xDD776448ded1cAc2108817bAe89fDc72c24474f1',\r\n  Factory: '0xbD171B0509B88EF736Ab03865934cD900e1197a5',\r\n  Kameleon: '0x48b19619273A96FFf8735a60D9A19924a5016E39',\r\n  Govern: '0x9A6Fa5C372fC911867D928db45E4cA1eC3E38720',\r\n};\r\n\r\nexport const exchangeAddressTable: { [x: string]: string } = {\r\n  kSSE: '0x5456540aabd10eb07b92af271072027f1f72b3dc',\r\n  kLGE: '0x1478992b8d4ad729a1ed7b4f35ffbec328e4d671',\r\n  kKKO: '0xcfa5a64b0cfa4b6aebac02a9c2d67723bccdf393',\r\n  kSSB: '0xe70cf58c6d8f23a75c608b9b95b8176b74faf1e8',\r\n  kSSH: '0xbf02f6f1a75d2bdc2e2619b49a3e116e5e90e219',\r\n};\r\n\r\nexport const kStockTokenAddressTable: { [x: string]: string } = {\r\n  kSSE: '0x58791638902535f1Cfc0004453B0A09bFC50B7bE',\r\n  kLGE: '0x6727F8C740f5f3d3b58fc681fE32d3b9eC1D31Df',\r\n  kKKO: '0x139B29164a11FD2AFBF772A761aC31B742C4C735',\r\n  kSSB: '0x2DE466829ac31Db937946365A9f8Aec86363120F',\r\n  kSSH: '0xE90E363fD3FfdB1Aa8577c71EbBABd00d8c7aBea',\r\n};\r\n\r\nexport const kStockTokenCodeTable = {\r\n  kSSE: '005930',\r\n  kLGE: '066570',\r\n  kKKO: '035720',\r\n  kSSB: '207940',\r\n  kSSH: '010140',\r\n};\r\n\r\nexport const logoTable: { [x: string]: string } = {\r\n  kSSE: 'kSSE.svg',\r\n  kLGE: 'kLGE.png',\r\n  kKKO: 'kKKO.png',\r\n  kSSB: 'kSSB.svg',\r\n  kSSH: 'kSSH.svg',\r\n  KLAY: 'KLAY.svg',\r\n};\r\n","import Caver from 'caver-js';\r\n\r\nimport {\r\n  abiTable,\r\n  exchangeAddressTable,\r\n  kStockTokenAddressTable,\r\n} from './../constants/index';\r\n\r\nexport const callCaver = new Caver('https://api.baobab.klaytn.net:8651');\r\nconst caver = new Caver(window.klaytn);\r\n\r\nconst callIsApproved = async ({ stockName }: { stockName: string }) => {\r\n  const res = await callContract({\r\n    contractName: 'KStockToken',\r\n    contractAddress: kStockTokenAddressTable[stockName],\r\n    methodName: 'allowance',\r\n    parameters: [\r\n      window.klaytn.selectedAddress,\r\n      exchangeAddressTable[stockName],\r\n    ],\r\n  });\r\n  return res.length >= 76;\r\n};\r\n\r\nconst sendApprove = async ({ stockName }: { stockName: string }) => {\r\n  try {\r\n    const result: any = await sendContract({\r\n      contractName: 'KStockToken',\r\n      contractAddress: kStockTokenAddressTable[stockName],\r\n      methodName: 'approve',\r\n      parameters: [\r\n        exchangeAddressTable[stockName],\r\n        '115792089237316195423570985008687907853269984665640564039457584007913129639935', // maximum value\r\n      ],\r\n    });\r\n    return result;\r\n  } catch (error) {\r\n    // console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// const testContract = async ({\r\n//   contractName,\r\n//   contractAddress,\r\n//   methodName,\r\n//   parameters = [],\r\n//   account = undefined,\r\n// }: {\r\n//   contractName: string;\r\n//   contractAddress: string;\r\n//   methodName: string;\r\n//   parameters?: Array<string | number>;\r\n//   kaikas?: boolean;\r\n//   account?: string | undefined;\r\n// }) => {\r\n//   console.log('?????', parameters);\r\n//   const contract = new callCaver.klay.Contract(\r\n//     abiTable[contractName],\r\n//     contractAddress\r\n//   );\r\n//   const receipt = await contract.call(\r\n//     {\r\n//       from: account,\r\n//       gas: '300000',\r\n//     },\r\n//     methodName,\r\n//     null\r\n//   );\r\n//   console.log(`call receipt: ${receipt}`);\r\n//   return receipt;\r\n// };\r\n\r\nconst callContract = async ({\r\n  contractName,\r\n  contractAddress,\r\n  methodName,\r\n  parameters = [],\r\n  account = undefined,\r\n  kaikas = false,\r\n}: {\r\n  contractName: string;\r\n  contractAddress: string;\r\n  methodName: string;\r\n  parameters?: Array<string | number>;\r\n  kaikas?: boolean;\r\n  account?: string | undefined;\r\n}) => {\r\n  try {\r\n    // if (\r\n    //   contractName === undefined ||\r\n    //   contractAddress === undefined ||\r\n    //   methodName === undefined\r\n    // )\r\n    //   throw 'Not enough arguments';\r\n    let contract = undefined;\r\n    // if (kaikas === true && window.klaytn !== undefined) {\r\n    if (kaikas === true) {\r\n      contract = new caver.klay.Contract(\r\n        abiTable[contractName],\r\n        contractAddress\r\n      );\r\n      if (parameters.length > 0) {\r\n        const receipt = await contract.call(\r\n          {\r\n            from: account || window.klaytn.selectedAddress,\r\n            gas: '300000',\r\n          },\r\n          methodName,\r\n          parameters\r\n        );\r\n        // console.log(`call receipt: ${receipt}`);\r\n        return receipt;\r\n      } else {\r\n        const receipt = await contract.call(\r\n          {\r\n            from: account || window.klaytn.selectedAddress,\r\n            gas: '300000',\r\n          },\r\n          methodName\r\n        );\r\n        // console.log(`call receipt: ${receipt}`);\r\n        return receipt;\r\n      }\r\n    } else {\r\n      contract = callCaver.contract.create(\r\n        abiTable[contractName],\r\n        contractAddress\r\n      );\r\n      const callResult = await contract.call(methodName, ...parameters);\r\n      // console.log(`Result of calling get function with key: ${callResult}`);\r\n      return callResult;\r\n    }\r\n  } catch (error) {\r\n    // console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\nconst sendContract = async ({\r\n  contractName,\r\n  contractAddress,\r\n  methodName,\r\n  parameters = [],\r\n  amount = '0',\r\n}: {\r\n  contractName: string;\r\n  contractAddress: string;\r\n  methodName: string;\r\n  parameters?: Array<any>;\r\n  amount?: string;\r\n}) => {\r\n  try {\r\n    // if (\r\n    //   contractName === undefined ||\r\n    //   contractAddress === undefined ||\r\n    //   methodName === undefined\r\n    // )\r\n    //   throw 'Not enough arguments';\r\n    const myContract = new caver.klay.Contract(\r\n      abiTable[contractName],\r\n      contractAddress\r\n    );\r\n    const result = await myContract.methods[methodName](...parameters).send({\r\n      from: window.klaytn.selectedAddress,\r\n      to: contractAddress,\r\n      gas: 300000,\r\n      value: caver.utils.convertToPeb(amount, 'KLAY'),\r\n    });\r\n    return result?.blockHash;\r\n  } catch (error) {\r\n    // console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\nconst getBalance = async ({ address }: { address: string }) => {\r\n  try {\r\n    const balance = await callCaver.klay.getBalance(address);\r\n    return balance;\r\n  } catch (error) {\r\n    // console.log(error);\r\n    return '';\r\n  }\r\n};\r\n\r\n// how to use\r\n\r\n// deployContract({ contractName: \"MyKIP7\" });\r\n\r\n// const contractAddress = \"0x9ae71CA5Babd51D1Cdda1785091Dab28866C54C9\";\r\n// callContract({\r\n//   contractName: \"MyKIP7\",\r\n//   contractAddress,\r\n//   methodName: \"totalSupply\",\r\n// });\r\n\r\n// const contractAddress = \"0x9ae71CA5Babd51D1Cdda1785091Dab28866C54C9\";\r\n// sendContract({\r\n//   contractName: \"MyKIP7\",\r\n//   contractAddress,\r\n//   methodName: \"approve\",\r\n//   parameters: [process.env.feeAddress, \"1000000\"],\r\n// });\r\n\r\n// multiMint();\r\n\r\nexport { callContract, sendContract, getBalance, callIsApproved, sendApprove };\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../store/user';\r\n\r\nimport {\r\n  MultipleInputContainer,\r\n  MultipleInputWrapper,\r\n  MultipleInputBlank,\r\n  MultipleInputList,\r\n} from './styles/MultipleInput.styles';\r\n\r\nimport { IUseInput } from '../../hooks/useInput';\r\n\r\nimport { callContract, getBalance } from '../../utils/KAS';\r\nimport { kStockTokenAddressTable } from '../../constants';\r\n\r\ninterface TokenListProps {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface ISwapInput extends IUseInput {\r\n  children?: React.ReactNode;\r\n  tokenName: string;\r\n  setTokenName: React.Dispatch<React.SetStateAction<string>>;\r\n  // onCalculateInput: ({value: string}) => void;\r\n  onCalculateInput: any;\r\n}\r\n\r\nconst angleUp = faAngleUp as IconProp;\r\nconst angleDown = faAngleDown as IconProp;\r\n\r\nconst SwapInput = ({\r\n  children,\r\n  tokenName,\r\n  setTokenName,\r\n  tokenBalance,\r\n  isFocus,\r\n  isBlankError,\r\n  isDecimalError,\r\n  isChange,\r\n  setIsChange,\r\n  setTokenBalance,\r\n  setKey,\r\n  setIsFocus,\r\n  changeInput,\r\n  onCalculateInput,\r\n}: ISwapInput) => {\r\n  const params = useParams();\r\n  const user = useSelector(selectUser);\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  // 선택한 token의 이름, 가격, 수량\r\n  const [tokenList, setTokenList] = useState<Array<TokenListProps>>([]);\r\n  const [maxValue, setMaxValue] = useState<number>(0);\r\n\r\n  // selected list 설정\r\n  useEffect(() => {\r\n    const tList = new Array<TokenListProps>();\r\n    const symbolTable = Object.keys(kStockTokenAddressTable);\r\n    let i = 0;\r\n    for (i; i < symbolTable.length; i++) {\r\n      const token: TokenListProps = {\r\n        id: i,\r\n        name: symbolTable[i],\r\n      };\r\n      tList.push(token);\r\n    }\r\n    tList.push({\r\n      id: i,\r\n      name: 'KLAY',\r\n    });\r\n    setTokenList(tList);\r\n    setTokenName(params.token ? params.token : tList[i].name);\r\n  }, [params.token, setTokenName]);\r\n\r\n  // tokenName 변경에 따라 Max값 변경\r\n  useEffect(() => {\r\n    // name을 확인 후 초기값 설정\r\n    // maxBalance, numberofDecimal\r\n    if (tokenName === 'KLAY') {\r\n      getBalance({ address: window.klaytn.selectedAddress }).then((res) => {\r\n        setMaxValue(Number((+res / 10 ** 18).toFixed(2)));\r\n      });\r\n    } else {\r\n      callContract({\r\n        contractName: 'KStockToken',\r\n        contractAddress: kStockTokenAddressTable[tokenName],\r\n        methodName: 'balanceOf',\r\n        parameters: [window.klaytn.selectedAddress],\r\n      }).then((res) => setMaxValue(Number((+res / 10 ** 18).toFixed(6))));\r\n    }\r\n  }, [tokenName, user]);\r\n\r\n  const clickDownIcon = useCallback(() => {\r\n    setIsOpen(true);\r\n    setIsFocus(true);\r\n  }, [setIsFocus]);\r\n\r\n  const clickUpIcon = useCallback(() => {\r\n    setIsOpen(false);\r\n    setIsFocus(false);\r\n  }, [setIsFocus]);\r\n\r\n  const clickItem = useCallback(\r\n    (name: string) => {\r\n      setTokenName(name);\r\n      onCalculateInput({ name, tokenBalance });\r\n    },\r\n    [onCalculateInput, tokenBalance, setTokenName]\r\n  );\r\n\r\n  const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    // console.log('event value : ', e.keyCode);\r\n    const tokenBalance = e.target.value;\r\n    changeInput(e);\r\n    onCalculateInput({ tokenName, tokenBalance });\r\n  };\r\n\r\n  return (\r\n    <MultipleInputContainer\r\n      isFocus={isFocus}\r\n      isError={isBlankError || isDecimalError}\r\n    >\r\n      <div>\r\n        <section>\r\n          <label htmlFor=\"input\">{children}</label>\r\n          {children === 'INPUT' && (\r\n            <label htmlFor=\"input\">Max {maxValue}</label>\r\n          )}\r\n        </section>\r\n        <MultipleInputWrapper>\r\n          <section>\r\n            <div>{tokenName}</div>\r\n            {isOpen ? (\r\n              <FontAwesomeIcon\r\n                icon={angleUp}\r\n                className=\"icon\"\r\n                onClick={clickUpIcon}\r\n              />\r\n            ) : (\r\n              <FontAwesomeIcon\r\n                icon={angleDown}\r\n                className=\"icon\"\r\n                onClick={clickDownIcon}\r\n              />\r\n            )}\r\n          </section>\r\n          <input\r\n            placeholder=\"0.000000\"\r\n            id=\"input\"\r\n            autoComplete=\"off\"\r\n            value={tokenBalance}\r\n            onKeyDown={(e) => setKey(e.key)}\r\n            onChange={onChangeHandler}\r\n            onFocus={() => setIsFocus(true)}\r\n            onBlur={() => setIsFocus(false)}\r\n          />\r\n        </MultipleInputWrapper>\r\n        {isOpen && (\r\n          <>\r\n            <MultipleInputBlank />\r\n            <MultipleInputList>\r\n              {tokenList.map((el) => (\r\n                <li key={el.id} onClick={() => clickItem(el.name)}>\r\n                  {el.name}\r\n                </li>\r\n              ))}\r\n            </MultipleInputList>\r\n          </>\r\n        )}\r\n      </div>\r\n      {/* 에러 메세지 */}\r\n      {isDecimalError && (\r\n        <section>Amount must be within 6 decimal points</section>\r\n      )}\r\n      {isBlankError && <section>Required</section>}\r\n    </MultipleInputContainer>\r\n  );\r\n};\r\n\r\nexport default SwapInput;\r\n","import React, { useCallback, useState } from 'react';\r\n\r\nexport interface IUseInput {\r\n  tokenBalance: string;\r\n  isFocus: boolean;\r\n  isBlankError: boolean;\r\n  isDecimalError: boolean;\r\n  isChange: boolean;\r\n  setIsChange: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setTokenBalance: React.Dispatch<React.SetStateAction<string>>;\r\n  setKey: React.Dispatch<React.SetStateAction<string>>;\r\n  setIsFocus: React.Dispatch<React.SetStateAction<boolean>>;\r\n  changeInput: any;\r\n}\r\n\r\nconst useInput = (decimal: number) => {\r\n  const [isFocus, setIsFocus] = useState<boolean>(false);\r\n  const [isBlankError, setIsBlankError] = useState<boolean>(false);\r\n  const [isDecimalError, setIsDecimalError] = useState<boolean>(false);\r\n  const [isChange, setIsChange] = useState<boolean>(false);\r\n  const [key, setKey] = useState<string>('');\r\n  const [tokenBalance, setTokenBalance] = useState<string>('');\r\n\r\n  const changeInput = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      // 입력 받은 키 값에 대한 조건(숫자, 삭제 or 소수점)\r\n      if (\r\n        !!parseInt(key) ||\r\n        key === 'Backspace' ||\r\n        key === 'Delete' ||\r\n        key === '0'\r\n      ) {\r\n        setTokenBalance(e.target.value);\r\n\r\n        // 소수점 갯수에 대한 조건\r\n        // 소수점 에러 핸들링\r\n        const [, n] = e.target.value.split('.');\r\n        if (n && n.length > decimal) {\r\n          setIsDecimalError(true);\r\n        } else {\r\n          setIsDecimalError(false);\r\n        }\r\n      } else if (key === '.' && e.target.value.match(/\\./g)?.length === 1) {\r\n        setTokenBalance(e.target.value);\r\n      }\r\n\r\n      // 비어있는 값인지에 대한 조건\r\n      // 비어있는 값 에러 핸들링\r\n      if (e.target.value) {\r\n        setIsBlankError(false);\r\n      } else {\r\n        setIsBlankError(true);\r\n      }\r\n      setIsChange(true);\r\n    },\r\n    [key, decimal]\r\n  );\r\n\r\n  return {\r\n    tokenBalance,\r\n    isFocus,\r\n    isBlankError,\r\n    isDecimalError,\r\n    isChange,\r\n    setIsChange,\r\n    setTokenBalance,\r\n    setKey,\r\n    setIsFocus,\r\n    changeInput,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { useParams } from 'react-router-dom';\r\nimport Caver from 'caver-js';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n  SwapPageWrapper,\r\n  DetailInfoStyle,\r\n  IconWrapper,\r\n  ButtonWrapper,\r\n} from './styles/SwapPage.styles';\r\n\r\nimport ToastPortal from '../components/portal/ToastPortal';\r\nimport SwapInput from '../components/Input/SwapInput';\r\nimport useInput from '../hooks/useInput';\r\n\r\nimport {\r\n  callContract,\r\n  sendContract,\r\n  callIsApproved,\r\n  sendApprove,\r\n} from '../utils/KAS';\r\nimport {\r\n  exchangeAddressTable,\r\n  kStockTokenAddressTable,\r\n} from '../constants/index';\r\n\r\nconst arrowDown = faArrowDown as IconProp;\r\nconst caver = new Caver(window.klaytn);\r\n\r\nconst amountKlay = async (token: string, balance: string) => {\r\n  const result = await callContract({\r\n    contractName: 'Exchange',\r\n    contractAddress: `${exchangeAddressTable[token]}`,\r\n    methodName: 'getEthAmount',\r\n    parameters: [caver.utils.convertToPeb(balance, 'KLAY')],\r\n  });\r\n  return result;\r\n};\r\n\r\nconst amountToken = async (token: string, balance: string) => {\r\n  const result = await callContract({\r\n    contractName: 'Exchange',\r\n    contractAddress: `${exchangeAddressTable[token]}`,\r\n    methodName: 'getTokenAmount',\r\n    parameters: [balance],\r\n  });\r\n  return result;\r\n};\r\n\r\nconst SwapPage = () => {\r\n  const params = useParams();\r\n  const setToken = params.token !== undefined ? params.token : 'kSSE';\r\n  const [nameA, setNameA] = useState<string>(setToken);\r\n  const [nameB, setNameB] = useState<string>(setToken);\r\n  // const [detailInfo, setDetailInfo] = useState<number>(0);\r\n  const [isApproveA, setIsApproveA] = useState(false);\r\n  const [fee, setFee] = useState<string>('');\r\n  const successNotify = () => toast.success('SUCCESS!!!');\r\n  const failNotify = () => toast.error('FAIL!!!');\r\n\r\n  const {\r\n    tokenBalance: tokenBalanceA,\r\n    isFocus: isFocusA,\r\n    isBlankError: isBlankErrorA,\r\n    isDecimalError: isDecimalErrorA,\r\n    isChange: isChangeA,\r\n    setIsChange: setIsChangeA,\r\n    setTokenBalance: setTokenBalanceA,\r\n    setKey: setKeyA,\r\n    setIsFocus: setIsFocusA,\r\n    changeInput: changeInputA,\r\n  } = useInput(6);\r\n\r\n  const swapInputPropsA = {\r\n    tokenName: nameA,\r\n    setTokenName: setNameA,\r\n    tokenBalance: tokenBalanceA,\r\n    isFocus: isFocusA,\r\n    isBlankError: isBlankErrorA,\r\n    isDecimalError: isDecimalErrorA,\r\n    isChange: isChangeA,\r\n    setIsChange: setIsChangeA,\r\n    setTokenBalance: setTokenBalanceA,\r\n    setKey: setKeyA,\r\n    setIsFocus: setIsFocusA,\r\n    changeInput: changeInputA,\r\n  };\r\n\r\n  const {\r\n    tokenBalance: tokenBalanceB,\r\n    isFocus: isFocusB,\r\n    isBlankError: isBlankErrorB,\r\n    isDecimalError: isDecimalErrorB,\r\n    isChange: isChangeB,\r\n    setIsChange: setIsChangeB,\r\n    setTokenBalance: setTokenBalanceB,\r\n    setKey: setKeyB,\r\n    setIsFocus: setIsFocusB,\r\n    changeInput: changeInputB,\r\n  } = useInput(6);\r\n\r\n  const swapInputPropsB = {\r\n    tokenName: nameB,\r\n    setTokenName: setNameB,\r\n    tokenBalance: tokenBalanceB,\r\n    isFocus: isFocusB,\r\n    isBlankError: isBlankErrorB,\r\n    isDecimalError: isDecimalErrorB,\r\n    isChange: isChangeB,\r\n    setIsChange: setIsChangeB,\r\n    setTokenBalance: setTokenBalanceB,\r\n    setKey: setKeyB,\r\n    setIsFocus: setIsFocusB,\r\n    changeInput: changeInputB,\r\n  };\r\n\r\n  /**\r\n   * swap type 에 따른 함수\r\n   */\r\n\r\n  const swapSelector = async ({\r\n    tokenName,\r\n    tokenBalance, // klayBalance\r\n  }: {\r\n    tokenName: string;\r\n    tokenBalance: string;\r\n  }) => {\r\n    // klay <> token\r\n    const klayToTokenInputA = async ({\r\n      tokenName,\r\n      tokenBalance, // klayBalance\r\n    }: {\r\n      tokenName: string;\r\n      tokenBalance: string;\r\n    }) => {\r\n      if (Number(tokenBalance) <= 0) {\r\n        setTokenBalanceB('0');\r\n        return;\r\n      }\r\n      const swapTokenAmount: string = await amountToken(\r\n        nameB,\r\n        caver.utils.convertToPeb(tokenBalance, 'KLAY')\r\n      );\r\n      setTokenBalanceB(Number(Number(swapTokenAmount) / 10 ** 18).toFixed(6));\r\n      // const approved = await callIsApproved({ stockName: tokenName });\r\n      // setIsApproveA(true);\r\n      setFee(Number(+tokenBalance * 0.003).toFixed(3) + ' ' + nameA);\r\n    };\r\n\r\n    // token <> klay\r\n    const tokenToKlayInputA = async ({\r\n      tokenName,\r\n      tokenBalance,\r\n    }: {\r\n      tokenName: string;\r\n      tokenBalance: string;\r\n    }) => {\r\n      if (Number(tokenBalance) <= 0) {\r\n        setTokenBalanceB('0');\r\n        return;\r\n      }\r\n      const swapKlayAmount: string = await amountKlay(tokenName, tokenBalance);\r\n      setTokenBalanceB(Number(Number(swapKlayAmount) / 10 ** 18).toFixed(6));\r\n      // const approved = await callIsApproved({ stockName: tokenName });\r\n      // setIsApproveA(approved);\r\n      // setIsApproveA(true);\r\n      setFee(Number(+tokenBalance * 0.003).toFixed(3) + ' ' + nameA);\r\n    };\r\n\r\n    const onCalculateInputA = async ({\r\n      tokenName,\r\n      tokenBalance,\r\n    }: {\r\n      tokenName: string;\r\n      tokenBalance: string;\r\n    }) => {\r\n      if (tokenBalance === '') {\r\n        tokenBalance = '0';\r\n      }\r\n      if (+tokenBalance > 0) {\r\n        const changeTokenA = await amountKlay(tokenName, tokenBalance);\r\n        const changeKlay: string = await amountToken(nameB, changeTokenA);\r\n        setTokenBalanceB((+changeKlay / 10 ** 18).toString());\r\n        const approvedA = await callIsApproved({ stockName: tokenName });\r\n        const approvedB = await callIsApproved({ stockName: nameB });\r\n\r\n        // console.log('approvedA :', approvedA);\r\n        // console.log('approvedB :', approvedB);\r\n        // setIsApproveA(approvedA);\r\n        // setIsApproveA(true);\r\n        setFee(Number(+tokenBalance * 0.006).toFixed(3) + ' ' + nameA);\r\n      }\r\n    };\r\n\r\n    // main\r\n    if (nameA === 'KLAY') {\r\n      if (nameB === 'KLAY') {\r\n        return doNothing({ tokenName, tokenBalance });\r\n      } else {\r\n        return klayToTokenInputA({ tokenName, tokenBalance });\r\n      }\r\n    } else {\r\n      if (nameB === 'KLAY') {\r\n        return tokenToKlayInputA({ tokenName, tokenBalance });\r\n      } else {\r\n        return onCalculateInputA({ tokenName, tokenBalance });\r\n      }\r\n    }\r\n  };\r\n  const doNothing = async ({\r\n    tokenName,\r\n    tokenBalance,\r\n  }: {\r\n    tokenName: string;\r\n    tokenBalance: string;\r\n  }) => {\r\n    return;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(kStockTokenAddressTable).includes(nameA)) {\r\n      callIsApproved({ stockName: nameA }).then((res: boolean) =>\r\n        setIsApproveA(res)\r\n      );\r\n    } else {\r\n      setIsApproveA(true);\r\n    }\r\n  }, [nameA]);\r\n\r\n  // const onCalculateInputB = async ({\r\n  //   tokenName,\r\n  //   tokenBalance,\r\n  // }: {\r\n  //   tokenName: string;\r\n  //   tokenBalance: string;\r\n  // }) => {\r\n  //   if (+tokenBalance > 0) {\r\n  //     const changeTokenB: string = await amountKlay(tokenName, tokenBalance);\r\n  //     const changeKlay: string = await amountToken(nameA, changeTokenB);\r\n\r\n  //     setTokenBalanceA((+changeKlay / 10 ** 18).toString());\r\n\r\n  //     const approvedA = await callIsApproved({ stockName: tokenName });\r\n  //     const approvedB = await callIsApproved({ stockName: nameB });\r\n\r\n  //     setIsApproveA(approvedA);\r\n  //   }\r\n  // };\r\n\r\n  const onApprove = async () => {\r\n    if (!isApproveA) {\r\n      const result = await sendApprove({ stockName: nameA });\r\n      if (result instanceof Error === false) {\r\n        setIsApproveA(true);\r\n        successNotify();\r\n      } else {\r\n        failNotify();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSwap = async () => {\r\n    if (nameA === 'KLAY') {\r\n      if (nameB === 'KLAY') {\r\n        return; // nothing\r\n      } else {\r\n        // klayToToken\r\n        const result = await sendContract({\r\n          contractName: 'Exchange',\r\n          contractAddress: exchangeAddressTable[nameB],\r\n          methodName: 'ethToTokenSwap',\r\n          parameters: [\r\n            caver.utils.convertToPeb(\r\n              (+tokenBalanceB * 0.99).toFixed(15),\r\n              'KLAY'\r\n            ),\r\n          ],\r\n          amount: tokenBalanceA,\r\n        });\r\n\r\n        if (result instanceof Error === false) {\r\n          successNotify();\r\n        } else {\r\n          failNotify();\r\n        }\r\n      }\r\n    } else {\r\n      if (nameB === 'KLAY') {\r\n        // tokenToKlay\r\n        const result = await sendContract({\r\n          contractName: 'Exchange',\r\n          contractAddress: exchangeAddressTable[nameA],\r\n          methodName: 'tokenToEthSwap',\r\n          parameters: [\r\n            caver.utils.convertToPeb(tokenBalanceA, 'KLAY'),\r\n            caver.utils.convertToPeb(\r\n              (+tokenBalanceB * 0.99).toFixed(15),\r\n              'KLAY'\r\n            ),\r\n          ],\r\n        });\r\n\r\n        if (result instanceof Error === false) {\r\n          successNotify();\r\n        } else {\r\n          failNotify();\r\n        }\r\n      } else {\r\n        // tokenTotoken\r\n        const result = await sendContract({\r\n          contractName: 'Exchange',\r\n          contractAddress: exchangeAddressTable[nameA],\r\n          methodName: 'tokenToTokenSwap',\r\n          parameters: [\r\n            caver.utils.convertToPeb(tokenBalanceA, 'KLAY'),\r\n            caver.utils.convertToPeb(\r\n              (+tokenBalanceB * 0.99).toFixed(15),\r\n              'KLAY'\r\n            ),\r\n            kStockTokenAddressTable[nameB],\r\n          ],\r\n        });\r\n\r\n        if (result instanceof Error === false) {\r\n          successNotify();\r\n        } else {\r\n          failNotify();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SwapPageWrapper>\r\n      <h2 className=\"tit\">Swap</h2>\r\n      <form action=\"\">\r\n        <SwapInput {...swapInputPropsA} onCalculateInput={swapSelector}>\r\n          INPUT\r\n        </SwapInput>\r\n        <IconWrapper>\r\n          <FontAwesomeIcon icon={arrowDown} className=\"icon\" />\r\n        </IconWrapper>\r\n        <SwapInput {...swapInputPropsB} onCalculateInput={doNothing}>\r\n          OUTPUT\r\n        </SwapInput>\r\n        {tokenBalanceA && tokenBalanceB && (\r\n          <DetailInfoStyle>\r\n            {/* <div>\r\n              <dt>현재 가격</dt>\r\n              <dd>{detailInfo.toLocaleString('ko-KR')} KRW</dd>\r\n            </div> */}\r\n            <div>\r\n              <dt>수수료</dt>\r\n              <dd>{fee}</dd>\r\n            </div>\r\n          </DetailInfoStyle>\r\n        )}\r\n        {isApproveA ? (\r\n          <ButtonWrapper\r\n            numberA={Number(tokenBalanceA)}\r\n            numberB={Number(tokenBalanceB)}\r\n            isErrorA={isDecimalErrorA}\r\n            isErrorB={isDecimalErrorB}\r\n            type=\"button\"\r\n            onClick={onSwap}\r\n          >\r\n            SWAP\r\n          </ButtonWrapper>\r\n        ) : (\r\n          <ButtonWrapper\r\n            numberA={Number(tokenBalanceA)}\r\n            numberB={Number(tokenBalanceB)}\r\n            isErrorA={isDecimalErrorA}\r\n            isErrorB={isDecimalErrorB}\r\n            type=\"button\"\r\n            onClick={onApprove}\r\n          >\r\n            APPROVE\r\n          </ButtonWrapper>\r\n        )}\r\n      </form>\r\n      <ToastPortal />\r\n    </SwapPageWrapper>\r\n  );\r\n};\r\n\r\nexport default SwapPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const MainPageWrapper = styled.div`\r\n  max-width: var(--width);\r\n  margin: 0 auto;\r\n  color: var(--white);\r\n\r\n  .main__oracle {\r\n    @media (max-width: 1023px) {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainPageSearch = styled.div`\r\n  display: flex;\r\n  margin-bottom: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 0.5rem;\r\n  background-color: var(--white);\r\n  align-items: center;\r\n\r\n  & > input {\r\n    padding-left: 1rem;\r\n    width: 100%;\r\n    border: 0;\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    color: var(--dark-green);\r\n    background-color: var(--white);\r\n    outline: none;\r\n  }\r\n\r\n  & > button {\r\n    width: 120px;\r\n    height: 2rem;\r\n    border: 0;\r\n    border-radius: 0.5rem;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n    background-color: var(--green);\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainPageList = styled.ul`\r\n  border-radius: 0.5rem;\r\n  /* background-color: var(--dark-green); */\r\n  background-color: var(--white);\r\n\r\n  & > div {\r\n    display: flex;\r\n    padding: 0 2rem;\r\n    border-bottom: 2px solid var(--green);\r\n\r\n    span {\r\n      flex: 1;\r\n      padding: 1rem 0;\r\n      font-size: 1rem;\r\n      text-align: right;\r\n      color: var(--green);\r\n\r\n      &:nth-of-type(1) {\r\n        flex: 1.5;\r\n        text-align: left;\r\n      }\r\n    }\r\n  }\r\n\r\n  & > div > span > i {\r\n    font-size: 0.9rem;\r\n    font-style: normal;\r\n\r\n    @media (max-width: 760px) {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainPageItem = styled.li`\r\n  & > a {\r\n    display: flex;\r\n    padding: 1rem 2rem;\r\n    border-bottom: 1px solid var(--white);\r\n    font-size: 1.2rem;\r\n    color: var(--white);\r\n\r\n    & > span {\r\n      flex: 1;\r\n      text-align: right;\r\n      color: var(--dark-green);\r\n\r\n      :first-of-type {\r\n        flex: 1.5;\r\n        text-align: left;\r\n      }\r\n\r\n      em {\r\n        font-style: normal;\r\n        font-size: 0.8rem;\r\n        color: var(--green);\r\n      }\r\n    }\r\n\r\n    :last-of-type {\r\n      border: 0;\r\n    }\r\n\r\n    .main__name,\r\n    .main__price {\r\n      font-weight: 700;\r\n    }\r\n\r\n    /* \r\n    .main__usd {\r\n      @media (max-width: 1023px) {\r\n        display: none;\r\n      }\r\n    } */\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nconst StockLogoStyle = styled.img`\r\n  /* width: 70px; */\r\n  height: 20px;\r\n  max-width: 60px;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  @media (max-width: 760px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport { StockLogoStyle };\r\n","import React from 'react';\r\nimport { StockLogoStyle } from './StockLogo.style';\r\nimport { logoTable } from '../../constants';\r\n\r\nconst StockLogo = ({ stockName }: { stockName: any }) => {\r\n  return (\r\n    <StockLogoStyle\r\n      src={process.env.PUBLIC_URL + `/stockLogo/${logoTable[stockName]}`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StockLogo;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useKlaySocket } from '../utils/bithumbSocket';\r\n\r\nimport {\r\n  MainPageWrapper,\r\n  MainPageSearch,\r\n  MainPageList,\r\n  MainPageItem,\r\n} from './styles/MainPage.styles';\r\n\r\nimport { callContract } from '../utils/KAS';\r\nimport { kStockTokenCodeTable, exchangeAddressTable } from '../constants/index';\r\nimport { GovernPagePollList } from './styles/GovernPage.styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { onSelectNav } from '../store/user';\r\n\r\nimport StockLogo from './../components/StockLogo/StockLogo';\r\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface TokenList {\r\n  id?: number;\r\n  name?: string;\r\n  oraclePrice?: any;\r\n  krwPrice?: any;\r\n  premium?: string;\r\n  code?: string;\r\n  token?: string;\r\n}\r\n\r\nconst MainPage = () => {\r\n  const [inputString, setInputString] = useState('');\r\n  const [stockList, setStockList] = useState<TokenList[]>([]);\r\n  const dispatch = useDispatch();\r\n  const currentKlayPrice = useKlaySocket();\r\n  const changeInput = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputString(e.target.value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateList = async () => {\r\n      const tempList: Array<TokenList> = [];\r\n      let mapList = [];\r\n\r\n      // sever에서 naverAPI 데이터 가져옴\r\n      const stockAPI = await axios({\r\n        method: 'get',\r\n        url: `/api/stock/getStocks`,\r\n      });\r\n      const stockData = stockAPI.data.data;\r\n\r\n      // tempList에 kStock symbal이랑 code 삽입\r\n      const keyArr = Object.keys(kStockTokenCodeTable);\r\n      const valueArr = Object.values(kStockTokenCodeTable);\r\n      for (let i = 0; i < keyArr.length; i++) {\r\n        tempList.push({ id: i, token: String(keyArr[i]), code: valueArr[i] });\r\n      }\r\n\r\n      // mapList에 각각의 속성값 넣기\r\n      mapList = await Promise.all(\r\n        tempList.map(async (item) => {\r\n          let stockName = '';\r\n          let oraclePrice = '';\r\n          const token: any = item.token;\r\n\r\n          // name과 oraclePrice 값 넣기\r\n          const idx: number = stockData.findIndex(\r\n            (i: { codeNumber: string }) => i.codeNumber === item.code\r\n          );\r\n\r\n          if (idx !== -1) {\r\n            stockName = stockData[idx].stockName;\r\n            oraclePrice = stockData[idx].nowValue;\r\n          }\r\n\r\n          // krwPrice 값 구하기\r\n          const klayAmount = await callContract({\r\n            contractName: 'Exchange',\r\n            contractAddress: `${exchangeAddressTable[token]}`,\r\n            methodName: 'getEthAmount',\r\n            parameters: [1],\r\n          });\r\n\r\n          const krwPrice = +klayAmount * 1.003 * +currentKlayPrice;\r\n\r\n          // premium 값 구하기\r\n          const premium = (krwPrice / +oraclePrice - 1) * 100;\r\n\r\n          return {\r\n            name: stockName,\r\n            oraclePrice: oraclePrice,\r\n            krwPrice: String(Math.floor(krwPrice)),\r\n            premium: String(premium.toFixed(2)),\r\n            code: item.code,\r\n            token: token,\r\n          };\r\n        })\r\n      );\r\n      return setStockList(mapList);\r\n    };\r\n    const onLoadData = async () => {\r\n      await updateList();\r\n    };\r\n    onLoadData();\r\n  }, [currentKlayPrice]);\r\n\r\n  // const onClickSearchHanler = (e) => {\r\n  //   const keyword = e.target.value;\r\n  //   // setStockList;\r\n  // };\r\n\r\n  const filteredStockList = (lst: Array<TokenList>) => {\r\n    const filterList = lst.filter((v: TokenList) => {\r\n      return v.name !== undefined && v.name.includes(inputString.trim());\r\n    });\r\n    // console.log(filterList);\r\n    return filterList;\r\n  };\r\n  const magnifyingGlass = faMagnifyingGlass as IconProp;\r\n  return (\r\n    <MainPageWrapper>\r\n      <h2 className=\"tit\">Stock List</h2>\r\n      <MainPageSearch>\r\n        <FontAwesomeIcon\r\n          icon={magnifyingGlass}\r\n          style={{ color: `var(--green)` }}\r\n          className=\"icon\"\r\n        />\r\n        <input onChange={(e) => changeInput(e)} value={inputString} />\r\n      </MainPageSearch>\r\n      <MainPageList>\r\n        <div className=\"table-header\">\r\n          <span>Name</span>\r\n          <span className=\"main__oracle\">Oracle price</span>\r\n          <span>Pool Price</span>\r\n          <span>\r\n            Premium\r\n            <i>(%)</i>\r\n          </span>\r\n        </div>\r\n        {filteredStockList(stockList).map((el: TokenList, index: number) => (\r\n          <MainPageItem key={index}>\r\n            <Link\r\n              to={`/swap/${el.token}`}\r\n              onClick={() => dispatch(onSelectNav('swap'))}\r\n            >\r\n              <span className=\"main__name\">\r\n                <StockLogo stockName={el.token} /> {el.name}{' '}\r\n                <em>({el.token})</em>\r\n              </span>\r\n              <span className=\"main__oracle\">\r\n                {el.oraclePrice.toLocaleString('ko-KR')}{' '}\r\n                {String.fromCharCode(0x20a9)}\r\n              </span>\r\n              <span className=\"main__price\">\r\n                {Number(el.krwPrice).toLocaleString('ko-KR')}{' '}\r\n                {String.fromCharCode(0x20a9)}\r\n              </span>\r\n              <span>{el.premium}%</span>\r\n            </Link>\r\n          </MainPageItem>\r\n        ))}\r\n      </MainPageList>\r\n    </MainPageWrapper>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n// WebSocket Ticker 데이터 가져오기\r\n// 사용되는 곳 CoinMarket\r\nexport const useKlaySocket = (): string => {\r\n  const [wsInstance, setWsInstance] = useState('');\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket('wss://pubwss.bithumb.com/pub/ws');\r\n\r\n    let klaytnPrice = undefined;\r\n    const getDefaultPrice = async () => {\r\n      const result = await axios.get(\r\n        'https://api.bithumb.com/public/ticker/KLAY_KRW'\r\n      );\r\n      klaytnPrice = result?.data?.data?.closing_price;\r\n      setWsInstance(klaytnPrice);\r\n    };\r\n    if (klaytnPrice === undefined) {\r\n      getDefaultPrice();\r\n    }\r\n\r\n    ws.onopen = () => {\r\n      const request = {\r\n        type: 'ticker',\r\n        symbols: ['KLAY_KRW'],\r\n        tickTypes: ['30M'],\r\n      };\r\n      ws.send(JSON.stringify(request));\r\n    };\r\n\r\n    ws.onmessage = (e: { data: Iterable<number> }) => {\r\n      const data = JSON.parse(e.data.toString());\r\n      klaytnPrice = data?.content?.closePrice;\r\n      if (klaytnPrice !== undefined) {\r\n        setWsInstance(klaytnPrice);\r\n      }\r\n    };\r\n\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, []);\r\n\r\n  return wsInstance;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const PoolPageWrapper = styled.div`\r\n  max-width: var(--width);\r\n  margin: 0 auto;\r\n  color: var(--green);\r\n\r\n  & a {\r\n    color: var(--dark-green);\r\n  }\r\n`;\r\n\r\nexport const PoolPageList = styled.ul`\r\n  border-radius: 0.5rem;\r\n  background-color: var(--white);\r\n\r\n  & > div {\r\n    display: flex;\r\n    padding: 1rem 2rem;\r\n    border-bottom: 2px solid var(--green);\r\n    font-size: 1rem;\r\n  }\r\n\r\n  & > div > span {\r\n    flex: 1;\r\n    text-align: right;\r\n\r\n    :first-of-type {\r\n      flex: 1.5;\r\n      text-align: left;\r\n    }\r\n  }\r\n\r\n  & > div > span > i {\r\n    font-size: 0.9rem;\r\n    font-style: normal;\r\n\r\n    @media (max-width: 760px) {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PoolPageItem = styled.li`\r\n  display: flex;\r\n  margin: 0 2rem;\r\n  padding: 1rem 0;\r\n  border-bottom: 1px solid var(--white);\r\n\r\n  & > div {\r\n    flex: 1;\r\n    text-align: right;\r\n    font-weight: 700;\r\n\r\n    :first-of-type {\r\n      flex: 1.5;\r\n      text-align: left;\r\n    }\r\n\r\n    &.main__oracle {\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  :last-of-type {\r\n    border: 0;\r\n  }\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  PoolPageWrapper,\r\n  PoolPageList,\r\n  PoolPageItem,\r\n} from './styles/PoolPage.styles';\r\n\r\nimport { callContract, getBalance } from '../utils/KAS';\r\nimport { exchangeAddressTable, kStockTokenAddressTable } from '../constants';\r\nimport StockLogo from '../components/StockLogo/StockLogo';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\n\r\ninterface PoolListProps {\r\n  id: number;\r\n  name: string;\r\n  liquid: number;\r\n  change: number;\r\n}\r\n\r\nconst PoolPage = () => {\r\n  const [poolList, setPoolList] = useState<{\r\n    poolList: Array<PoolListProps>;\r\n    isLoading: boolean;\r\n  }>({\r\n    poolList: [],\r\n    isLoading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const callPoolList = async () => {\r\n      const tempList = [];\r\n      const exchangeAddressList = Object.keys(exchangeAddressTable);\r\n      for (let i = 0; i < exchangeAddressList.length; i++) {\r\n        const klayBalance = await getBalance({\r\n          address: exchangeAddressTable[exchangeAddressList[i]],\r\n        });\r\n\r\n        const tokenBalance = await callContract({\r\n          contractName: 'KStockToken',\r\n          contractAddress: kStockTokenAddressTable[exchangeAddressList[i]], // 컨트랙트 배포주소\r\n          methodName: 'balanceOf',\r\n          parameters: [exchangeAddressTable[exchangeAddressList[i]]], // 인자값 balanceOf(address aacount)\r\n        });\r\n        const {\r\n          data: { data },\r\n        } = await axios.get(`/api/contract/getPoolRoi`, {\r\n          params: {\r\n            exchangeAddress: exchangeAddressTable[exchangeAddressList[i]],\r\n          },\r\n        });\r\n        const pool = {\r\n          id: i,\r\n          name: exchangeAddressList[i],\r\n          liquid:\r\n            ((Number(klayBalance) / 1000000000000000000) * tokenBalance) /\r\n            1000000000000000000,\r\n          change: data.roi,\r\n        };\r\n        tempList.push(pool);\r\n      }\r\n      setPoolList({ poolList: tempList, isLoading: false });\r\n    };\r\n    callPoolList();\r\n  }, []);\r\n\r\n  return (\r\n    <PoolPageWrapper>\r\n      <h2 className=\"tit\">Pool</h2>\r\n      <PoolPageList>\r\n        <div>\r\n          <span>Name</span>\r\n          <span>Volume</span>\r\n          <span>\r\n            APY<i>(ROI)</i>\r\n          </span>\r\n        </div>\r\n        {poolList?.isLoading === true && (\r\n          <SkeletonTheme height={'50px'}>\r\n            <p>\r\n              <Skeleton count={5}></Skeleton>\r\n            </p>\r\n          </SkeletonTheme>\r\n        )}\r\n        {poolList?.isLoading === false &&\r\n          poolList?.poolList?.map((el) => (\r\n            <Link to={`/liquidity/${el.name}`} key={el.id}>\r\n              <PoolPageItem>\r\n                <div>\r\n                  <StockLogo stockName={el.name} /> {el.name} {'<->'}{' '}\r\n                  <StockLogo stockName=\"KLAY\" />\r\n                  {'KLAY'}\r\n                </div>\r\n                <div className=\"main__oracle\">\r\n                  {el.liquid.toLocaleString('ko-KR')}\r\n                </div>\r\n                <div>{el.change}%</div>\r\n              </PoolPageItem>\r\n            </Link>\r\n          ))}\r\n      </PoolPageList>\r\n    </PoolPageWrapper>\r\n  );\r\n};\r\n\r\nexport default PoolPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const LiquidityPageWrapper = styled.div`\r\n  max-width: var(--s-width);\r\n  margin: auto;\r\n  position: relative;\r\n\r\n  & > form {\r\n    padding: 1rem 2rem;\r\n    background-color: var(--white);\r\n    border-radius: 1rem;\r\n  }\r\n`;\r\n\r\nexport const TabStyle = styled.span`\r\n  position: absolute;\r\n  top: 1.3rem;\r\n  right: 0;\r\n  background-color: var(--gray);\r\n  border-radius: 0.25rem;\r\n  overflow: hidden;\r\n\r\n  & > button {\r\n    width: 3.5rem;\r\n    padding: 0.3rem 0.6rem;\r\n    color: var(--white);\r\n    font-size: 0.7rem;\r\n    border: 0;\r\n    background-color: transparent;\r\n\r\n    &.on {\r\n      background-color: var(--dark-green);\r\n    }\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 1rem 0;\r\n  color: var(--blue);\r\n`;\r\n\r\nexport const OutputWrapper = styled.div`\r\n  padding: 1rem 1.5rem;\r\n  border-radius: 1rem;\r\n  font-weight: 600;\r\n  color: var(--white);\r\n  background-color: var(--green);\r\n\r\n  & > label {\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: var(--dark-green);\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.button<{\r\n  balanceA?: string;\r\n  balanceB?: string;\r\n  isErrorA?: boolean;\r\n  isErrorB?: boolean;\r\n}>`\r\n  display: block;\r\n  padding: 1rem 2rem;\r\n  margin: auto;\r\n  margin-top: 1.5rem;\r\n  width: 100%;\r\n  color: var(--white);\r\n  font-weight: 700;\r\n  font-size: 1rem;\r\n  background-color: var(--dark-green);\r\n  border-radius: 1rem;\r\n  border: 2px solid var(--dark-green);\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    border: 2px solid var(--blue);\r\n  }\r\n\r\n  &.liquidity__addbutton {\r\n    opacity: ${(props) =>\r\n      Number(props.balanceA) > 0 &&\r\n      Number(props.balanceB) > 0 &&\r\n      !props.isErrorA &&\r\n      !props.isErrorB\r\n        ? ''\r\n        : '0.7'};\r\n\r\n    :hover {\r\n      border: ${(props) =>\r\n        Number(props.balanceA) > 0 &&\r\n        Number(props.balanceB) > 0 &&\r\n        !props.isErrorA &&\r\n        !props.isErrorB\r\n          ? '2px solid var(--blue)'\r\n          : '2px solid var(--dark-green)'};\r\n    }\r\n  }\r\n\r\n  &.liquidity__removebutton {\r\n    opacity: ${(props) =>\r\n      Number(props.balanceA) > 0 && !props.isErrorA ? '' : '0.7'};\r\n\r\n    :hover {\r\n      border: ${(props) =>\r\n        Number(props.balanceA) > 0 && !props.isErrorA\r\n          ? '2px solid var(--blue)'\r\n          : '2px solid var(--dark-green)'};\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const SingleInputContainer = styled.div<{\r\n  isFocus: boolean;\r\n  isError: boolean;\r\n}>`\r\n  & > div {\r\n    border: 2px solid\r\n      ${(props) =>\r\n        props.isError\r\n          ? 'var(--red)'\r\n          : props.isFocus\r\n          ? 'var(--blue)'\r\n          : 'var(--green)'};\r\n    border-radius: 1rem;\r\n    background-color: var(--green);\r\n    padding: 1rem 1.5rem;\r\n  }\r\n\r\n  & > div > section {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & > div > section > label {\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: var(--dark-green);\r\n  }\r\n\r\n  & > section {\r\n    margin-top: 0.2rem;\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: var(--red);\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport const SingleInputWrapper = styled.div`\r\n  display: flex;\r\n\r\n  & > section {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  /* temp */\r\n  & > section > img {\r\n    margin-right: 0.5%;\r\n  }\r\n\r\n  & > section > div {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n  }\r\n\r\n  & > input {\r\n    flex: auto;\r\n    width: 100%;\r\n    height: 2rem;\r\n    border: 0;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n    background-color: var(--green);\r\n    outline: none;\r\n    text-align: right;\r\n\r\n    ::placeholder {\r\n      color: var(--dark-green);\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport {\r\n  SingleInputContainer,\r\n  SingleInputWrapper,\r\n} from './styles/LiquidityInput.styles';\r\n\r\nimport { getBalance } from '../../utils/KAS';\r\n\r\nimport useInput from '../../hooks/useInput';\r\nimport { callContract } from '../../utils/KAS';\r\nimport { kStockTokenAddressTable } from '../../constants';\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n  liftState: (\r\n    value: string,\r\n    isChange: boolean,\r\n    isDecimalError: boolean\r\n  ) => void;\r\n  otherBalance: number;\r\n  otherChange: boolean;\r\n  isKlay: boolean;\r\n  ratio: number;\r\n  numberOfDecimal: number;\r\n}\r\n\r\nconst LiquidityInput = ({\r\n  children,\r\n  liftState,\r\n  otherBalance,\r\n  otherChange,\r\n  isKlay,\r\n  ratio,\r\n  numberOfDecimal,\r\n}: LayoutProps) => {\r\n  const { id } = useParams();\r\n  const [name, setName] = useState<string>('');\r\n  const [maxBalance, setMaxBalance] = useState<number>(0);\r\n  const {\r\n    tokenBalance,\r\n    isFocus,\r\n    isBlankError,\r\n    isDecimalError,\r\n    isChange,\r\n    setIsChange,\r\n    setTokenBalance,\r\n    setKey,\r\n    setIsFocus,\r\n    changeInput,\r\n  } = useInput(numberOfDecimal);\r\n\r\n  useEffect(() => {\r\n    // 이름 정하기\r\n    if (id !== undefined) {\r\n      setName(id);\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    // name을 확인 후 초기값 설정\r\n    // maxBalance, numberofDecimal\r\n    if (window.klaytn.selectedAddress) {\r\n      if (isKlay) {\r\n        getBalance({ address: window.klaytn.selectedAddress }).then((res) => {\r\n          setMaxBalance(Number((Number(res) / 1000000000000000000).toFixed(2)));\r\n        });\r\n      } else if (name !== undefined) {\r\n        callContract({\r\n          contractName: 'KStockToken',\r\n          contractAddress: kStockTokenAddressTable[name],\r\n          methodName: 'balanceOf',\r\n          parameters: [window.klaytn.selectedAddress],\r\n        }).then((res) =>\r\n          setMaxBalance(Number((res / 1000000000000000000).toFixed(6)))\r\n        );\r\n      }\r\n    }\r\n  }, [name, isKlay]);\r\n\r\n  useEffect(() => {\r\n    liftState(tokenBalance, isChange, isDecimalError);\r\n  }, [liftState, tokenBalance, isChange, isDecimalError]);\r\n\r\n  useEffect(() => {\r\n    if (otherChange && isKlay) {\r\n      const [, decimal] = String(otherBalance / ratio / 1.01).split('.');\r\n      if (decimal && decimal.length > numberOfDecimal) {\r\n        setTokenBalance((otherBalance / ratio / 1.01).toFixed(numberOfDecimal));\r\n      } else {\r\n        setTokenBalance(String(otherBalance / ratio / 1.01));\r\n      }\r\n      setIsChange(false);\r\n    } else if (otherChange && !isKlay) {\r\n      const [, decimal] = String(otherBalance * ratio * 1.01).split('.');\r\n      if (decimal && decimal.length > numberOfDecimal) {\r\n        setTokenBalance((otherBalance * ratio * 1.01).toFixed(numberOfDecimal));\r\n      } else {\r\n        setTokenBalance(String(otherBalance * ratio * 1.01));\r\n      }\r\n      setIsChange(false);\r\n    }\r\n  }, [\r\n    otherChange,\r\n    otherBalance,\r\n    isKlay,\r\n    ratio,\r\n    numberOfDecimal,\r\n    setIsChange,\r\n    setTokenBalance,\r\n  ]);\r\n\r\n  return (\r\n    <SingleInputContainer\r\n      isFocus={isFocus}\r\n      isError={isBlankError || isDecimalError}\r\n    >\r\n      <div>\r\n        <section>\r\n          <label htmlFor={name + isKlay}>{children}</label>\r\n          {children === 'INPUT' && (\r\n            <label htmlFor={name + isKlay}>Max {maxBalance}</label>\r\n          )}\r\n        </section>\r\n        <SingleInputWrapper>\r\n          <section>\r\n            <div>{isKlay ? 'KLAY' : name}</div>\r\n          </section>\r\n          <input\r\n            placeholder=\"0.00\"\r\n            id={name + isKlay}\r\n            autoComplete=\"off\"\r\n            value={tokenBalance}\r\n            onKeyDown={(e) => setKey(e.key)}\r\n            onChange={(e) => changeInput(e)}\r\n            onFocus={() => setIsFocus(true)}\r\n            onBlur={() => setIsFocus(false)}\r\n          />\r\n        </SingleInputWrapper>\r\n      </div>\r\n      {/* 에러 메세지 */}\r\n      {isDecimalError && (\r\n        <section>\r\n          Amount must be within {numberOfDecimal} decimal points\r\n        </section>\r\n      )}\r\n      {isBlankError && <section>Required</section>}\r\n    </SingleInputContainer>\r\n  );\r\n};\r\n\r\nexport default LiquidityInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const SingleInputContainer = styled.div<{\r\n  isFocus: boolean;\r\n  isError: boolean;\r\n}>`\r\n  & > div {\r\n    border: 2px solid\r\n      ${(props) =>\r\n        props.isError\r\n          ? 'var(--red)'\r\n          : props.isFocus\r\n          ? 'var(--blue)'\r\n          : 'var(--green)'};\r\n    border-radius: 1rem;\r\n    background-color: var(--green);\r\n    padding: 1rem 1.5rem;\r\n  }\r\n\r\n  & > div > section {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & > div > section > label {\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: var(--dark-green);\r\n  }\r\n\r\n  & > section {\r\n    margin-top: 0.2rem;\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: var(--red);\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport const SingleInputWrapper = styled.div`\r\n  display: flex;\r\n\r\n  & > section {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  /* temp */\r\n  & > section > img {\r\n    margin-right: 0.5%;\r\n  }\r\n\r\n  & > section > div {\r\n    width: 10rem;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n  }\r\n\r\n  & > input {\r\n    flex: auto;\r\n    width: 100%;\r\n    height: 2rem;\r\n    border: 0;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n    background-color: var(--green);\r\n    outline: none;\r\n    text-align: right;\r\n\r\n    ::placeholder {\r\n      color: var(--dark-green);\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport {\r\n  SingleInputContainer,\r\n  SingleInputWrapper,\r\n} from './styles/LiquidityRemoveInput.styles';\r\n\r\nimport useInput from '../../hooks/useInput';\r\nimport { callContract } from '../../utils/KAS';\r\nimport { exchangeAddressTable } from '../../constants';\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n  liftState: (\r\n    value: string,\r\n    isChange: boolean,\r\n    isDecimalError: boolean\r\n  ) => void;\r\n  numberOfDecimal: number;\r\n}\r\n\r\nconst LiquidityRemoveInput = ({\r\n  children,\r\n  liftState,\r\n  numberOfDecimal,\r\n}: LayoutProps) => {\r\n  const { id } = useParams();\r\n  const [name, setName] = useState<string>('');\r\n  const [maxBalance, setMaxBalance] = useState<number>(0);\r\n  const {\r\n    tokenBalance,\r\n    isFocus,\r\n    isBlankError,\r\n    isDecimalError,\r\n    isChange,\r\n    setKey,\r\n    setIsFocus,\r\n    changeInput,\r\n  } = useInput(numberOfDecimal);\r\n\r\n  useEffect(() => {\r\n    // 이름 정하기\r\n    if (id !== undefined) {\r\n      setName(id);\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    // name을 확인 후 초기값 설정\r\n    // maxBalance, numberofDecimal\r\n    // 0. lpToken 보유량\r\n    if (window.klaytn.selectedAddress) {\r\n      callContract({\r\n        contractName: 'Exchange',\r\n        contractAddress: exchangeAddressTable[name],\r\n        methodName: 'balanceOf',\r\n        parameters: [window.klaytn.selectedAddress],\r\n      })\r\n        .then((res) => {\r\n          setMaxBalance(Number((Number(res) / 1000000000000000000).toFixed(6)));\r\n        })\r\n        .catch((e) => {\r\n          // console.log(e);\r\n        });\r\n    }\r\n  }, [name]);\r\n\r\n  useEffect(() => {\r\n    liftState(tokenBalance, isChange, isDecimalError);\r\n  }, [liftState, tokenBalance, isChange, isDecimalError]);\r\n\r\n  return (\r\n    <SingleInputContainer\r\n      isFocus={isFocus}\r\n      isError={isBlankError || isDecimalError}\r\n    >\r\n      <div>\r\n        <section>\r\n          <label htmlFor=\"input\">{children}</label>\r\n          {children === 'INPUT' && (\r\n            <label htmlFor=\"input\">Max {maxBalance}</label>\r\n          )}\r\n        </section>\r\n        <SingleInputWrapper>\r\n          <section>\r\n            {/* temp */}\r\n            {/* <img /> */}\r\n            <div>KLAY + {name} LPT</div>\r\n          </section>\r\n          <input\r\n            placeholder=\"0.00\"\r\n            id=\"input\"\r\n            autoComplete=\"off\"\r\n            value={tokenBalance}\r\n            onKeyDown={(e) => setKey(e.key)}\r\n            onChange={(e) => changeInput(e)}\r\n            onFocus={() => setIsFocus(true)}\r\n            onBlur={() => setIsFocus(false)}\r\n          />\r\n        </SingleInputWrapper>\r\n      </div>\r\n      {/* 에러 메세지 */}\r\n      {isDecimalError && (\r\n        <section>\r\n          Amount must be within {numberOfDecimal} decimal points\r\n        </section>\r\n      )}\r\n      {isBlankError && <section>Required</section>}\r\n    </SingleInputContainer>\r\n  );\r\n};\r\n\r\nexport default LiquidityRemoveInput;\r\n","import { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Caver from 'caver-js';\r\n\r\nimport { login, logout } from '../store/user';\r\nimport { sendContract, sendApprove } from '../utils/KAS';\r\nimport { exchangeAddressTable } from '../constants';\r\n\r\nconst caver = new Caver();\r\n\r\nconst useButton = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Add Liquidity\r\n  // (name: kStock 이름 BalanceA: KLAY 수량, BalanceB: kStock 수량)\r\n  const addButton = useCallback(\r\n    async (name: string, balanceA: string, balanceB: string) => {\r\n      const result = await sendContract({\r\n        contractName: 'Exchange',\r\n        contractAddress: exchangeAddressTable[name],\r\n        methodName: 'addLiquidity',\r\n        amount: balanceA, // klay\r\n        parameters: [caver.utils.toBN(Number(balanceB) * 1000000000000000000)],\r\n      });\r\n      return result;\r\n    },\r\n    []\r\n  );\r\n\r\n  // Remove Liquidity\r\n  // (name: kStock 이름, Balance: LP 수량)\r\n  const removeButton = useCallback((name: string, balance: string) => {\r\n    const result = sendContract({\r\n      contractName: 'Exchange',\r\n      contractAddress: exchangeAddressTable[name],\r\n      methodName: 'removeLiquidity',\r\n      parameters: [caver.utils.convertToPeb(balance, 'KLAY')],\r\n    });\r\n    return result;\r\n  }, []);\r\n\r\n  // Connect Wallet\r\n  const connectButton = useCallback(async () => {\r\n    if (typeof window.klaytn !== 'undefined') {\r\n      if (window.klaytn.isKaikas) {\r\n        const accounts = await window.klaytn.enable();\r\n        dispatch(login(accounts[0]));\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    } else {\r\n      dispatch(logout());\r\n      alert('Kaikas 설치하시기 바랍니다.');\r\n    }\r\n  }, [dispatch]);\r\n\r\n  // Apporve Token\r\n  // (name: kStock 이름)\r\n  const approveButton = useCallback(async (name: string) => {\r\n    const result = await sendApprove({ stockName: name });\r\n    return result;\r\n  }, []);\r\n\r\n  return { addButton, removeButton, connectButton, approveButton };\r\n};\r\n\r\nexport default useButton;\r\n","import { useEffect, useState, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faPlus, faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport Caver from 'caver-js';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n  LiquidityPageWrapper,\r\n  TabStyle,\r\n  IconWrapper,\r\n  OutputWrapper,\r\n  ButtonWrapper,\r\n} from './styles/LiquidityPage.styles';\r\n\r\nimport ToastPortal from '../components/portal/ToastPortal';\r\nimport LiquidityInput from '../components/Input/LiquidityInput';\r\nimport LiquidityRemoveInput from '../components/Input/LiquidityRemoveInput';\r\n\r\nimport useButton from '../hooks/useButton';\r\nimport { callContract, callIsApproved, getBalance } from '../utils/KAS';\r\nimport { exchangeAddressTable, kStockTokenAddressTable } from '../constants';\r\n\r\nconst plus = faPlus as IconProp;\r\nconst arrowDown = faArrowDown as IconProp;\r\nconst caver = new Caver();\r\n\r\ninterface RootState {\r\n  user: {\r\n    isLogin: boolean;\r\n  };\r\n}\r\n\r\ninterface TokenType {\r\n  balance: string;\r\n  isChange: boolean;\r\n  isDecimalError: boolean;\r\n}\r\n\r\ninterface RatioType {\r\n  klayBalance: number;\r\n  kStockBalance: number;\r\n}\r\n\r\nconst LiquidityPage = () => {\r\n  const { id } = useParams();\r\n  const [tab, setTab] = useState<string>('deposit');\r\n  const [name, setName] = useState<string>('');\r\n  const [isApprove, setIsApprove] = useState<boolean>(false);\r\n  const [addRatio, setAddRatio] = useState<number>(0);\r\n  const [removeRatio, setRemoveRatio] = useState<RatioType>({\r\n    klayBalance: 0,\r\n    kStockBalance: 0,\r\n  });\r\n  const [klayToken, setKlayToken] = useState<TokenType>({\r\n    balance: '',\r\n    isChange: false,\r\n    isDecimalError: false,\r\n  });\r\n  const [kStockToken, setKStockToken] = useState<TokenType>({\r\n    balance: '',\r\n    isChange: false,\r\n    isDecimalError: false,\r\n  });\r\n  const [lpToken, setLPToken] = useState<TokenType>({\r\n    balance: '',\r\n    isChange: false,\r\n    isDecimalError: false,\r\n  });\r\n  const { addButton, removeButton, connectButton, approveButton } = useButton();\r\n  const selectUser = (state: RootState) => state.user;\r\n  const user = useSelector(selectUser);\r\n  const successNotify = () => toast.success('SUCCESS!!!');\r\n  const failNotify = () => toast.error('FAIL!!!');\r\n\r\n  const liftKlayToken = useCallback(\r\n    (balance: string, isChange: boolean, isDecimalError: boolean) => {\r\n      setKlayToken({\r\n        balance,\r\n        isChange,\r\n        isDecimalError,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const liftKStockToken = useCallback(\r\n    (balance: string, isChange: boolean, isDecimalError: boolean) => {\r\n      setKStockToken({\r\n        balance,\r\n        isChange,\r\n        isDecimalError,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const liftLPToken = useCallback(\r\n    (balance: string, isChange: boolean, isDecimalError: boolean) => {\r\n      setLPToken({\r\n        balance,\r\n        isChange,\r\n        isDecimalError,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    // paramsID 확인\r\n    if (id !== undefined) {\r\n      setName(id);\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    // Approve 유무 확인\r\n    const checkApprove = async () => {\r\n      const result = await callIsApproved({ stockName: name });\r\n\r\n      if (result) {\r\n        setIsApprove(true);\r\n      } else {\r\n        setIsApprove(false);\r\n      }\r\n    };\r\n\r\n    if (window.klaytn.selectedAddress) {\r\n      checkApprove();\r\n    }\r\n  }, [name, user]);\r\n\r\n  useEffect(() => {\r\n    // KLAY 대 kSTOCKTOKEN 비율 확인\r\n    const callAmount = async () => {\r\n      const result = await callContract({\r\n        contractName: 'Exchange',\r\n        contractAddress: exchangeAddressTable[name],\r\n        methodName: 'getMinimumTokenAmountToAddLiquidity',\r\n        parameters: [caver.utils.toBN(1000000000)],\r\n      });\r\n      setAddRatio(result / 1000000000);\r\n    };\r\n\r\n    if (name !== '') {\r\n      callAmount();\r\n    }\r\n  }, [name, klayToken]);\r\n\r\n  useEffect(() => {\r\n    const calculateOutput = async (kStockName: string, lpAmount: number) => {\r\n      // 1.pool내 klay\r\n      const poolKlay = await getBalance({\r\n        address: exchangeAddressTable[kStockName],\r\n      });\r\n\r\n      // 2.pool내 kStock토큰 수\r\n      const poolKStock = await callContract({\r\n        contractName: 'KStockToken',\r\n        contractAddress: kStockTokenAddressTable[kStockName],\r\n        methodName: 'balanceOf',\r\n        parameters: [exchangeAddressTable[kStockName]],\r\n      });\r\n\r\n      // 3.totalLP\r\n      const totalLP = await callContract({\r\n        contractName: 'Exchange',\r\n        contractAddress: exchangeAddressTable[kStockName],\r\n        methodName: 'totalSupply',\r\n      });\r\n\r\n      // 모두 가져온 후 push\r\n      const ratio = (Number(lpAmount) * 1000000000000000000) / Number(totalLP);\r\n      setRemoveRatio({\r\n        klayBalance: Number(\r\n          ((Number(poolKlay) * ratio) / 1000000000000000000).toFixed(2)\r\n        ),\r\n        kStockBalance: Number(\r\n          ((Number(poolKStock) * ratio) / 1000000000000000000).toFixed(6)\r\n        ),\r\n      });\r\n    };\r\n\r\n    if (Number(lpToken.balance) > 0) {\r\n      calculateOutput(name, Number(lpToken.balance));\r\n    }\r\n  }, [name, lpToken.balance]);\r\n\r\n  return (\r\n    <LiquidityPageWrapper>\r\n      <h2 className=\"tit\">Liquidity</h2>\r\n      <TabStyle>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setTab('deposit')}\r\n          className={tab === 'deposit' ? 'on' : ''}\r\n        >\r\n          Add\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setTab('withdrawal')}\r\n          className={tab === 'withdrawal' ? 'on' : ''}\r\n        >\r\n          Remove\r\n        </button>\r\n      </TabStyle>\r\n      <form action=\"\">\r\n        {tab === 'deposit' ? (\r\n          <>\r\n            <div>\r\n              <LiquidityInput\r\n                liftState={liftKlayToken}\r\n                otherBalance={Number(kStockToken.balance)}\r\n                otherChange={kStockToken.isChange}\r\n                isKlay={true}\r\n                ratio={addRatio}\r\n                numberOfDecimal={2}\r\n              >\r\n                INPUT\r\n              </LiquidityInput>\r\n              <IconWrapper>\r\n                <FontAwesomeIcon icon={plus} className=\"icon\" />\r\n              </IconWrapper>\r\n              <LiquidityInput\r\n                liftState={liftKStockToken}\r\n                otherBalance={Number(klayToken.balance)}\r\n                otherChange={klayToken.isChange}\r\n                isKlay={false}\r\n                ratio={addRatio}\r\n                numberOfDecimal={6}\r\n              >\r\n                INPUT\r\n              </LiquidityInput>\r\n            </div>\r\n            {!user.isLogin ? (\r\n              <ButtonWrapper type=\"button\" onClick={connectButton}>\r\n                Connect\r\n              </ButtonWrapper>\r\n            ) : isApprove ? (\r\n              <ButtonWrapper\r\n                className=\"liquidity__addbutton\"\r\n                type=\"button\"\r\n                balanceA={klayToken.balance}\r\n                balanceB={kStockToken.balance}\r\n                isErrorA={klayToken.isDecimalError}\r\n                isErrorB={kStockToken.isDecimalError}\r\n                onClick={async () => {\r\n                  const result = await addButton(\r\n                    name,\r\n                    klayToken.balance,\r\n                    kStockToken.balance\r\n                  );\r\n                  if (result instanceof Error === false) {\r\n                    successNotify();\r\n                  } else {\r\n                    failNotify();\r\n                  }\r\n                }}\r\n              >\r\n                Add\r\n              </ButtonWrapper>\r\n            ) : (\r\n              <ButtonWrapper\r\n                type=\"button\"\r\n                onClick={async () => {\r\n                  const result = await approveButton(name);\r\n                  if (result instanceof Error === false) {\r\n                    setIsApprove(true);\r\n                    successNotify();\r\n                  } else {\r\n                    failNotify();\r\n                  }\r\n                }}\r\n              >\r\n                Approve\r\n              </ButtonWrapper>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <LiquidityRemoveInput liftState={liftLPToken} numberOfDecimal={6}>\r\n                INPUT\r\n              </LiquidityRemoveInput>\r\n              <IconWrapper>\r\n                <FontAwesomeIcon icon={arrowDown} className=\"icon\" />\r\n              </IconWrapper>\r\n              <OutputWrapper>\r\n                <label>OUTPUT</label>\r\n                <div>\r\n                  {removeRatio.klayBalance} KLAY + {removeRatio.kStockBalance}{' '}\r\n                  {name}\r\n                </div>\r\n              </OutputWrapper>\r\n            </div>\r\n            {!user.isLogin ? (\r\n              <ButtonWrapper onClick={connectButton} type=\"button\">\r\n                Connect\r\n              </ButtonWrapper>\r\n            ) : (\r\n              <ButtonWrapper\r\n                className=\"liquidity__removebutton\"\r\n                type=\"button\"\r\n                balanceA={lpToken.balance}\r\n                isErrorA={lpToken.isDecimalError}\r\n                onClick={async () => {\r\n                  const result = await removeButton(name, lpToken.balance);\r\n                  if (result instanceof Error === false) {\r\n                    successNotify();\r\n                  } else {\r\n                    failNotify();\r\n                  }\r\n                }}\r\n              >\r\n                Remove\r\n              </ButtonWrapper>\r\n            )}\r\n          </>\r\n        )}\r\n      </form>\r\n      <ToastPortal />\r\n    </LiquidityPageWrapper>\r\n  );\r\n};\r\n\r\nexport default LiquidityPage;\r\n","import styled from 'styled-components';\r\n\r\nconst MintPageWrapper = styled.div`\r\n  max-width: var(--s-width);\r\n  margin: auto;\r\n  position: relative;\r\n\r\n  & > form {\r\n    padding: 1rem 2rem;\r\n    background-color: var(--white);\r\n    border-radius: 1rem;\r\n  }\r\n`;\r\n\r\nconst TabStyle = styled.span`\r\n  position: absolute;\r\n  top: 1.3rem;\r\n  right: 0;\r\n  background-color: var(--gray);\r\n  border-radius: 0.25rem;\r\n  overflow: hidden;\r\n\r\n  & > button {\r\n    padding: 0.3rem 0.6rem;\r\n    color: var(--white);\r\n    font-size: 0.7rem;\r\n    border: 0;\r\n    background-color: transparent;\r\n\r\n    &.on {\r\n      background-color: var(--dark-green);\r\n    }\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DetailInfoStyle = styled.dl`\r\n  margin-top: 1.5rem;\r\n  padding: 1rem;\r\n  border-top: 1px solid var(--green);\r\n\r\n  & > div {\r\n    display: flex;\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  & dt {\r\n    width: 35%;\r\n    color: var(--gray);\r\n  }\r\n\r\n  & dd {\r\n    width: 65%;\r\n    color: var(--green);\r\n    font-weight: 700;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 1rem 0;\r\n  color: var(--blue);\r\n`;\r\n\r\nexport const ButtonWrapper = styled.button<{\r\n  numberA: number;\r\n  numberB: number;\r\n  isErrorA: boolean;\r\n  isErrorB: boolean;\r\n}>`\r\n  display: block;\r\n  padding: 1rem 2rem;\r\n  margin: auto;\r\n  margin-top: 1.5rem;\r\n  width: 100%;\r\n  color: var(--white);\r\n  font-weight: 700;\r\n  font-size: 1.2rem;\r\n  background-color: var(--dark-green);\r\n  border-radius: 1rem;\r\n  border: 0;\r\n  opacity: ${(props) =>\r\n    props.numberA > 0 && props.numberB > 0 && !props.isErrorA && !props.isErrorB\r\n      ? ''\r\n      : '0.7'};\r\n\r\n  :hover {\r\n    cursor: ${(props) =>\r\n      props.numberA > 0 &&\r\n      props.numberB > 0 &&\r\n      !props.isErrorA &&\r\n      !props.isErrorB\r\n        ? 'pointer'\r\n        : ''};\r\n  }\r\n`;\r\n\r\nexport { MintPageWrapper, DetailInfoStyle, TabStyle };\r\n","import styled from 'styled-components';\r\n\r\nexport const SingleInputContainer = styled.div<{\r\n  isFocus: boolean;\r\n  isError: boolean;\r\n}>`\r\n  & > div {\r\n    border: 2px solid\r\n      ${(props) =>\r\n        props.isError\r\n          ? 'var(--red)'\r\n          : props.isFocus\r\n          ? 'var(--blue)'\r\n          : 'var(--green)'};\r\n    border-radius: 1rem;\r\n    box-shadow: var(--shadowSharp);\r\n    background-color: var(--green);\r\n    padding: 1rem 1.5rem;\r\n  }\r\n\r\n  & > div > section {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & > div > section > label {\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: var(--dark-green);\r\n  }\r\n\r\n  & > section {\r\n    margin-top: 0.2rem;\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: var(--red);\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport const SingleInputWrapper = styled.div`\r\n  display: flex;\r\n\r\n  & > section {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  /* temp */\r\n  & > section > img {\r\n    margin-right: 0.5%;\r\n  }\r\n\r\n  & > section > div {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n  }\r\n\r\n  & > input {\r\n    flex: auto;\r\n    width: 100%;\r\n    height: 2rem;\r\n    border: 0;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n    background-color: var(--green);\r\n    outline: none;\r\n    text-align: right;\r\n\r\n    ::placeholder {\r\n      color: var(--dark-green);\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  SingleInputContainer,\r\n  SingleInputWrapper,\r\n} from './styles/SingleInput.styles';\r\n\r\nimport useInput from '../../hooks/useInput';\r\nimport { getBalance } from '../../utils/KAS';\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n  liftState: (\r\n    value: string,\r\n    price: number,\r\n    name: string,\r\n    isChange: boolean,\r\n    isDecimalError: boolean\r\n  ) => void;\r\n  otherBalance: number;\r\n  otherPrice: number;\r\n  otherChange: boolean;\r\n}\r\n\r\nconst SingleInput = ({\r\n  children,\r\n  liftState,\r\n  otherBalance,\r\n  otherPrice,\r\n  otherChange,\r\n}: LayoutProps) => {\r\n  // 임혁진 수정 tokenPrice = 1\r\n  const tokenPrice = 1;\r\n  const tokenName = 'KLAY';\r\n  const numberOfDecimal = 2;\r\n  const [maxValue, setMaxValue] = useState<number>(0);\r\n  const {\r\n    tokenBalance,\r\n    isFocus,\r\n    isBlankError,\r\n    isDecimalError,\r\n    isChange,\r\n    setIsChange,\r\n    setTokenBalance,\r\n    setKey,\r\n    setIsFocus,\r\n    changeInput,\r\n  } = useInput(numberOfDecimal);\r\n\r\n  useEffect(() => {\r\n    // 임혁진 수정\r\n    getBalance({ address: window.klaytn.selectedAddress }).then((res) => {\r\n      setMaxValue(Number(res) / 1000000000000000000);\r\n    });\r\n    // setTokenList(createTokenList(5));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    liftState(tokenBalance, tokenPrice, tokenName, isChange, isDecimalError);\r\n  }, [liftState, tokenBalance, isChange, isDecimalError]);\r\n\r\n  useEffect(() => {\r\n    if (otherChange && (otherBalance * otherPrice) / tokenPrice !== 0) {\r\n      const [, decimal] = String(\r\n        (otherBalance * otherPrice) / tokenPrice\r\n      ).split('.');\r\n      if (decimal && decimal.length > numberOfDecimal) {\r\n        setTokenBalance(\r\n          String(\r\n            ((otherBalance * otherPrice) / tokenPrice).toFixed(numberOfDecimal)\r\n          )\r\n        );\r\n      } else {\r\n        setTokenBalance(String((otherBalance * otherPrice) / tokenPrice));\r\n      }\r\n      setIsChange(false);\r\n    }\r\n  }, [\r\n    otherChange,\r\n    otherBalance,\r\n    otherPrice,\r\n    tokenPrice,\r\n    setTokenBalance,\r\n    setIsChange,\r\n  ]);\r\n\r\n  return (\r\n    <SingleInputContainer\r\n      isFocus={isFocus}\r\n      isError={isBlankError || isDecimalError}\r\n    >\r\n      <div>\r\n        <section>\r\n          <label htmlFor=\"input\">{children}</label>\r\n          {children === 'INPUT' && (\r\n            <label htmlFor=\"input\">Max {maxValue}</label>\r\n          )}\r\n        </section>\r\n        <SingleInputWrapper>\r\n          <section>\r\n            {/* temp */}\r\n            {/* <img /> */}\r\n            <div>KLAY</div>\r\n          </section>\r\n          <input\r\n            placeholder=\"0.00\"\r\n            id=\"input\"\r\n            autoComplete=\"off\"\r\n            value={tokenBalance}\r\n            onKeyDown={(e) => setKey(e.key)}\r\n            onChange={(e) => changeInput(e)}\r\n            onFocus={() => setIsFocus(true)}\r\n            onBlur={() => setIsFocus(false)}\r\n          />\r\n        </SingleInputWrapper>\r\n      </div>\r\n      {/* 에러 메세지 */}\r\n      {isDecimalError && (\r\n        <section>\r\n          Amount must be within {numberOfDecimal} decimal points\r\n        </section>\r\n      )}\r\n      {isBlankError && <section>Required</section>}\r\n    </SingleInputContainer>\r\n  );\r\n};\r\n\r\nexport default SingleInput;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {\r\n  MultipleInputContainer,\r\n  MultipleInputWrapper,\r\n  MultipleInputBlank,\r\n  MultipleInputList,\r\n} from './styles/MultipleInput.styles';\r\n\r\nimport useInput from '../../hooks/useInput';\r\n// 임혁진 수정\r\nimport { callContract } from '../../utils/KAS';\r\nimport {\r\n  contractAddressTable,\r\n  kStockTokenAddressTable,\r\n} from './../../constants';\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n  liftState: (\r\n    value: string,\r\n    price: number,\r\n    name: string,\r\n    isChange: boolean,\r\n    isDecimalError: boolean\r\n  ) => void;\r\n  otherBalance: number;\r\n  otherPrice: number;\r\n  otherChange: boolean;\r\n}\r\n\r\ninterface TokenListProps {\r\n  id: number;\r\n  name: string;\r\n  krwPrice: number;\r\n}\r\n\r\nconst angleUp = faAngleUp as IconProp;\r\nconst angleDown = faAngleDown as IconProp;\r\n\r\nconst MultipleInput = ({\r\n  children,\r\n  liftState,\r\n  otherBalance,\r\n  otherPrice,\r\n  otherChange,\r\n}: LayoutProps) => {\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  // 선택한 token의 이름, 가격, 수량\r\n  const [tokenName, setTokenName] = useState<string>('SELECT');\r\n  const [tokenPrice, setTokenPrice] = useState<number>(70000000000000000000000);\r\n  const [tokenList, setTokenList] = useState<Array<TokenListProps>>([]);\r\n  const [maxValue, setMaxValue] = useState<number>(0);\r\n  const {\r\n    tokenBalance,\r\n    isFocus,\r\n    isBlankError,\r\n    isDecimalError,\r\n    isChange,\r\n    setIsChange,\r\n    setTokenBalance,\r\n    setKey,\r\n    setIsFocus,\r\n    changeInput,\r\n  } = useInput(6);\r\n\r\n  useEffect(() => {\r\n    // 임혁진 수정\r\n    callContract({\r\n      contractName: 'Oracle',\r\n      contractAddress: contractAddressTable.Oracle,\r\n      methodName: 'getOraclePrice',\r\n    })\r\n      .then((res) => {\r\n        const tList = new Array<TokenListProps>();\r\n        const symbolTable = Object.keys(kStockTokenAddressTable);\r\n        for (let i = 0; i < res.length; i++) {\r\n          const token: TokenListProps = {\r\n            id: i,\r\n            name: symbolTable[i],\r\n            krwPrice: res[i] / 1000000000000000000,\r\n          };\r\n          tList.push(token);\r\n        }\r\n        return tList;\r\n      })\r\n      .then((tList: Array<TokenListProps>) => {\r\n        setTokenList(tList);\r\n        setTokenName(tList[0].name);\r\n        setTokenPrice(tList[0].krwPrice);\r\n      });\r\n  }, []);\r\n\r\n  // tokenName 변경에 따라 Max값 변경\r\n  useEffect(() => {\r\n    callContract({\r\n      contractName: 'KStockToken',\r\n      contractAddress: kStockTokenAddressTable[tokenName],\r\n      methodName: 'balanceOf',\r\n      parameters: [window.klaytn.selectedAddress],\r\n    }).then((res) => setMaxValue(res / 1000000000000000000));\r\n  }, [tokenName]);\r\n\r\n  useEffect(() => {\r\n    liftState(tokenBalance, tokenPrice, tokenName, isChange, isDecimalError);\r\n  }, [\r\n    liftState,\r\n    tokenBalance,\r\n    tokenPrice,\r\n    tokenName,\r\n    isChange,\r\n    isDecimalError,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (otherChange && (otherBalance * otherPrice) / tokenPrice !== 0) {\r\n      const [, decimal] = String(\r\n        (otherBalance * otherPrice) / tokenPrice\r\n      ).split('.');\r\n      if (decimal && decimal.length > 6) {\r\n        setTokenBalance(\r\n          String(((otherBalance * otherPrice) / tokenPrice).toFixed(6))\r\n        );\r\n      } else {\r\n        setTokenBalance(String((otherBalance * otherPrice) / tokenPrice));\r\n      }\r\n      setIsChange(false);\r\n    }\r\n  }, [\r\n    otherChange,\r\n    otherBalance,\r\n    otherPrice,\r\n    tokenPrice,\r\n    setTokenBalance,\r\n    setIsChange,\r\n  ]);\r\n\r\n  const clickDownIcon = useCallback(() => {\r\n    setIsOpen(true);\r\n    setIsFocus(true);\r\n  }, [setIsFocus]);\r\n\r\n  const clickUpIcon = useCallback(() => {\r\n    setIsOpen(false);\r\n    setIsFocus(false);\r\n  }, [setIsFocus]);\r\n\r\n  const clickItem = useCallback((name: string, price: number) => {\r\n    setTokenName(name);\r\n    setTokenPrice(price);\r\n  }, []);\r\n\r\n  return (\r\n    <MultipleInputContainer\r\n      isFocus={isFocus}\r\n      isError={isBlankError || isDecimalError}\r\n    >\r\n      <div>\r\n        <section>\r\n          <label htmlFor=\"input\">{children}</label>\r\n          {children === 'INPUT' && (\r\n            <label htmlFor=\"input\">Max {maxValue}</label>\r\n          )}\r\n        </section>\r\n        <MultipleInputWrapper>\r\n          <section>\r\n            {/* temp */}\r\n            {/* <img /> */}\r\n            <div>{tokenName}</div>\r\n            {isOpen ? (\r\n              <FontAwesomeIcon\r\n                icon={angleUp}\r\n                className=\"icon\"\r\n                onClick={clickUpIcon}\r\n              />\r\n            ) : (\r\n              <FontAwesomeIcon\r\n                icon={angleDown}\r\n                className=\"icon\"\r\n                onClick={clickDownIcon}\r\n              />\r\n            )}\r\n          </section>\r\n          <input\r\n            placeholder=\"0.000000\"\r\n            id=\"input\"\r\n            autoComplete=\"off\"\r\n            value={tokenBalance}\r\n            onKeyDown={(e) => setKey(e.key)}\r\n            onChange={(e) => changeInput(e)}\r\n            onFocus={() => setIsFocus(true)}\r\n            onBlur={() => setIsFocus(false)}\r\n          />\r\n        </MultipleInputWrapper>\r\n        {isOpen && (\r\n          <>\r\n            <MultipleInputBlank />\r\n            <MultipleInputList>\r\n              {tokenList.map((el) => (\r\n                <li key={el.id} onClick={() => clickItem(el.name, el.krwPrice)}>\r\n                  {el.name}\r\n                </li>\r\n              ))}\r\n            </MultipleInputList>\r\n          </>\r\n        )}\r\n      </div>\r\n      {/* 에러 메세지 */}\r\n      {isDecimalError && (\r\n        <section>Amount must be within 6 decimal points</section>\r\n      )}\r\n      {isBlankError && <section>Required</section>}\r\n    </MultipleInputContainer>\r\n  );\r\n};\r\n\r\nexport default MultipleInput;\r\n","import { useState, useCallback, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport Caver from 'caver-js';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n  MintPageWrapper,\r\n  TabStyle,\r\n  DetailInfoStyle,\r\n  IconWrapper,\r\n  ButtonWrapper,\r\n} from './styles/MintPage.styles';\r\n\r\nimport ToastPortal from '../components/portal/ToastPortal';\r\nimport SingleInput from '../components/Input/SingleInput';\r\nimport MultipleInput from '../components/Input/MultipleInput';\r\n\r\nimport { sendContract } from '../utils/KAS';\r\nimport { kStockTokenAddressTable } from '../constants';\r\n\r\nconst caver = new Caver();\r\n\r\nconst arrowDown = faArrowDown as IconProp;\r\n\r\nconst MintPage = () => {\r\n  const [tab, setTab] = useState<string>('mint');\r\n  const [balanceA, setBalanceA] = useState<string>('');\r\n  const [balanceB, setBalanceB] = useState<string>('');\r\n  const [priceA, setPriceA] = useState<number>(0);\r\n  const [priceB, setPriceB] = useState<number>(0);\r\n  const [nameA, setNameA] = useState<string>('');\r\n  const [nameB, setNameB] = useState<string>('');\r\n  const [isChangeA, setIsChangeA] = useState<boolean>(false);\r\n  const [isChangeB, setIsChangeB] = useState<boolean>(false);\r\n  const [isDecimalErrorA, setIsDecimalErrorA] = useState<boolean>(false);\r\n  const [isDecimalErrorB, setIsDecimalErrorB] = useState<boolean>(false);\r\n  const [detailInfo, setDetailInfo] = useState<number>(0);\r\n  const [fee, setFee] = useState<number>(0);\r\n  const successNotify = () => toast.success('SUCCESS!!!');\r\n  const failNotify = () => toast.error('FAIL!!!');\r\n\r\n  const liftStateA = useCallback(\r\n    (\r\n      balance: string,\r\n      price: number,\r\n      name: string,\r\n      isChange: boolean,\r\n      isDecimalError: boolean\r\n    ) => {\r\n      setBalanceA(balance);\r\n      setPriceA(price);\r\n      setNameA(name);\r\n      setIsChangeA(isChange);\r\n      setIsDecimalErrorA(isDecimalError);\r\n    },\r\n    []\r\n  );\r\n\r\n  const liftStateB = useCallback(\r\n    (\r\n      balance: string,\r\n      price: number,\r\n      name: string,\r\n      isChange: boolean,\r\n      isDecimalError: boolean\r\n    ) => {\r\n      setBalanceB(balance);\r\n      setPriceB(price);\r\n      setNameB(name);\r\n      setIsChangeB(isChange);\r\n      setIsDecimalErrorB(isDecimalError);\r\n    },\r\n    []\r\n  );\r\n\r\n  const clickButton = useCallback(async () => {\r\n    // 임혁진 수정\r\n    // 민트 클릭 시\r\n    if (tab === 'mint') {\r\n      const result = await sendContract({\r\n        contractName: 'KStockToken',\r\n        contractAddress: kStockTokenAddressTable[nameB],\r\n        methodName: 'mint',\r\n        amount: balanceA, // klay\r\n      });\r\n      if (result instanceof Error === false) {\r\n        successNotify();\r\n      } else {\r\n        failNotify();\r\n      }\r\n    } else {\r\n      // burn\r\n      const result = await sendContract({\r\n        contractName: 'KStockToken',\r\n        contractAddress: kStockTokenAddressTable[nameA],\r\n        methodName: 'burn',\r\n        parameters: [caver.utils.convertToPeb(balanceA, 'KLAY')], // * 1e18\r\n      });\r\n      if (result instanceof Error === false) {\r\n        successNotify();\r\n      } else {\r\n        failNotify();\r\n      }\r\n    }\r\n  }, [tab, nameA, nameB, balanceA]);\r\n\r\n  useEffect(() => {\r\n    if (priceA > 0 && priceB > 0 && tab === 'mint') {\r\n      const [, decimal] = String(priceA / priceB).split('.');\r\n      if (decimal && decimal.length > 6) {\r\n        setDetailInfo(Number((priceA / priceB).toFixed(6)));\r\n      } else {\r\n        setDetailInfo(priceA / priceB);\r\n      }\r\n    } else if (tab === 'burn') {\r\n      const [, decimal] = String(priceB / priceA).split('.');\r\n      if (decimal && decimal.length > 6) {\r\n        setDetailInfo(Number((priceB / priceA).toFixed(6)));\r\n      } else {\r\n        setDetailInfo(priceB / priceA);\r\n      }\r\n    }\r\n    setFee(+balanceA * 0.01);\r\n  }, [tab, priceA, priceB, balanceA]);\r\n\r\n  return (\r\n    <MintPageWrapper>\r\n      <h2 className=\"tit\">Mint & Burn</h2>\r\n      <TabStyle>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setTab('mint')}\r\n          className={tab === 'mint' ? 'on' : ''}\r\n        >\r\n          Mint\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setTab('burn')}\r\n          className={tab === 'burn' ? 'on' : ''}\r\n        >\r\n          Burn\r\n        </button>\r\n      </TabStyle>\r\n      <form action=\"\">\r\n        {tab === 'mint' ? (\r\n          <>\r\n            <SingleInput\r\n              liftState={liftStateA}\r\n              otherBalance={Number(balanceB)}\r\n              otherPrice={priceB}\r\n              otherChange={isChangeB}\r\n            >\r\n              INPUT\r\n            </SingleInput>\r\n            <IconWrapper>\r\n              <FontAwesomeIcon icon={arrowDown} className=\"icon\" />\r\n            </IconWrapper>\r\n            <MultipleInput\r\n              liftState={liftStateB}\r\n              otherBalance={Number(balanceA)}\r\n              otherPrice={priceA}\r\n              otherChange={isChangeA}\r\n            >\r\n              OUTPUT\r\n            </MultipleInput>\r\n            {balanceA && balanceB && (\r\n              <DetailInfoStyle>\r\n                <div>\r\n                  <dt>Exchange Rate</dt>\r\n                  <dd>\r\n                    1 KLAY = {detailInfo} {nameB}\r\n                  </dd>\r\n                </div>\r\n                <div>\r\n                  <dt>Fee(1%)</dt>\r\n                  <dd>\r\n                    {fee} {nameA}\r\n                  </dd>\r\n                </div>\r\n              </DetailInfoStyle>\r\n            )}\r\n            <ButtonWrapper\r\n              numberA={Number(balanceA)}\r\n              numberB={Number(balanceB)}\r\n              isErrorA={isDecimalErrorA}\r\n              isErrorB={isDecimalErrorB}\r\n              type=\"button\"\r\n              onClick={clickButton}\r\n            >\r\n              Mint\r\n            </ButtonWrapper>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <MultipleInput\r\n              liftState={liftStateA}\r\n              otherBalance={Number(balanceB)}\r\n              otherPrice={priceB}\r\n              otherChange={isChangeB}\r\n            >\r\n              INPUT\r\n            </MultipleInput>\r\n            <IconWrapper>\r\n              <FontAwesomeIcon icon={arrowDown} className=\"icon\" />\r\n            </IconWrapper>\r\n            <SingleInput\r\n              liftState={liftStateB}\r\n              otherBalance={Number(balanceA)}\r\n              otherPrice={priceA}\r\n              otherChange={isChangeA}\r\n            >\r\n              OUTPUT\r\n            </SingleInput>\r\n            {balanceA && balanceB && (\r\n              <DetailInfoStyle>\r\n                <div>\r\n                  <dt>Exchange Rate</dt>\r\n                  <dd>\r\n                    1 KLAY = {detailInfo} {nameA}\r\n                  </dd>\r\n                </div>\r\n                <div>\r\n                  <dt>Fee</dt>\r\n                  <dd>10KLAY</dd>\r\n                </div>\r\n              </DetailInfoStyle>\r\n            )}\r\n            <ButtonWrapper\r\n              numberA={Number(balanceA)}\r\n              numberB={Number(balanceB)}\r\n              isErrorA={isDecimalErrorA}\r\n              isErrorB={isDecimalErrorB}\r\n              type=\"button\"\r\n              onClick={clickButton}\r\n            >\r\n              Burn\r\n            </ButtonWrapper>\r\n          </>\r\n        )}\r\n      </form>\r\n      <ToastPortal />\r\n    </MintPageWrapper>\r\n  );\r\n};\r\n\r\nexport default MintPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const MyPageWrapper = styled.div`\r\n  max-width: var(--width);\r\n  margin: 0 auto;\r\n  color: var(--dark-green);\r\n\r\n  & > .subtit {\r\n    margin-top: 2rem;\r\n    margin-bottom: 1rem;\r\n    font-size: 1.5rem;\r\n    color: var(--white);\r\n  }\r\n\r\n  .pool__balance,\r\n  .asset__value {\r\n    flex: 1.5;\r\n  }\r\n\r\n  .pool__balance {\r\n    @media (max-width: 760px) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .mypage__bar {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const MyPageList = styled.ul`\r\n  border-radius: 0.5rem;\r\n  background-color: var(--white);\r\n\r\n  & > div {\r\n    display: flex;\r\n    padding: 1rem 2rem;\r\n    border-bottom: 2px solid var(--green);\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n  }\r\n\r\n  & > div > span {\r\n    flex: 1;\r\n    text-align: right;\r\n    color: var(--green);\r\n    padding-left: 0.5rem;\r\n\r\n    :first-of-type {\r\n      text-align: left;\r\n      padding-left: 0;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 760px) {\r\n    & > div {\r\n      padding: 0.6rem 0.8rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MyPageItem = styled.li`\r\n  display: flex;\r\n  padding: 1rem 2rem;\r\n  border-bottom: 1px solid var(--white);\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    width: 1rem;\r\n    padding-left: 0.5rem;\r\n    text-align: right;\r\n    flex-basis: 1rem;\r\n    overflow: auto;\r\n\r\n    :first-of-type {\r\n      padding-left: 0;\r\n      text-align: left;\r\n    }\r\n\r\n    &.mypage__bar {\r\n      padding: 0 24px;\r\n    }\r\n  }\r\n\r\n  :last-of-type {\r\n    border: 0;\r\n  }\r\n\r\n  @media (max-width: 760px) {\r\n    padding: 0.6rem 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const MyPageBar = styled.div<{\r\n  yes: number;\r\n  no: number;\r\n  totalSupply: string;\r\n}>`\r\n  margin: 0 0.5rem 0 0.5rem;\r\n  display: flex;\r\n  flex: 4 !important;\r\n  /* margin-left: -2rem; */\r\n  background-color: var(--white);\r\n\r\n  & > div {\r\n    &:first-of-type {\r\n      width: ${(props) => {\r\n        const calcPercent = (props.yes / +props.totalSupply) * 100;\r\n        return `${calcPercent}%`;\r\n      }};\r\n      background-color: var(--blue);\r\n    }\r\n\r\n    &:last-of-type {\r\n      width: ${(props) => {\r\n        const calcPercent = (props.no / +props.totalSupply) * 100;\r\n        return `${calcPercent}%`;\r\n      }};\r\n      background-color: var(--red);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { MyPageItem } from '../../pages/styles/MyPage.styles';\r\nimport axios from 'axios';\r\nimport { exchangeAddressTable } from '../../constants';\r\nimport { PoolListProps } from '../../pages/MyPage';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport StockLogo from '../../components/StockLogo/StockLogo';\r\nimport { useDispatch } from 'react-redux';\r\nimport { onSelectNav } from '../../store/user';\r\n\r\nconst MyPagePoolItem = ({ id, name, lpToken, balance }: PoolListProps) => {\r\n  const [roi, setRoi] = React.useState<number>(0);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    const getPoolRoi = async () => {\r\n      const {\r\n        data: { success, data },\r\n      } = await axios.get(`/api/contract/getPoolRoi`, {\r\n        params: {\r\n          exchangeAddress: exchangeAddressTable[name],\r\n        },\r\n      });\r\n      if (success === true) {\r\n        setRoi(data.roi);\r\n      }\r\n    };\r\n    getPoolRoi();\r\n  }, [name]);\r\n  const onClickHandler = () => {\r\n    navigate(`/liquidity/${name}`);\r\n    dispatch(onSelectNav('pool'));\r\n  };\r\n\r\n  return (\r\n    <MyPageItem onClick={onClickHandler} key={id}>\r\n      <div>\r\n        <StockLogo stockName={name} />\r\n        {name} {' <-> '} <StockLogo stockName={'KLAY'} />\r\n        {'KLAY'}\r\n      </div>\r\n      <div>{lpToken} LPT</div>\r\n      <div className=\"pool__balance\">{balance}</div>\r\n      <div>{roi}%</div>\r\n    </MyPageItem>\r\n  );\r\n};\r\nexport default MyPagePoolItem;\r\n","import { abiTable } from '../constants';\r\n\r\nexport const getMethodReturnStructType = ({\r\n  contractName,\r\n  methodName,\r\n}: {\r\n  contractName: string;\r\n  methodName: string;\r\n}) => {\r\n  const result = abiTable[contractName].filter(\r\n    (v) => v['name'] === methodName\r\n  )[0]['outputs'][0]['components'];\r\n  return result;\r\n};\r\n\r\nexport const getParsedDataFromUsingMethodType = ({\r\n  type,\r\n  value: v,\r\n  totalSupply = undefined,\r\n}: {\r\n  type: Array<{ name: string; method: string }>;\r\n  value: string | boolean[];\r\n  totalSupply?: undefined | string;\r\n}) => {\r\n  const temp: { [x: string]: string | number | boolean } = {};\r\n  type.forEach((value: { [x: string]: string }, idx: number) => {\r\n    temp[value['name']] = v[idx];\r\n  });\r\n  if (totalSupply !== undefined) {\r\n    temp['totalSupply'] = totalSupply;\r\n  }\r\n  return temp;\r\n};\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { contractAddressTable } from '../../constants';\r\nimport { MyPageItem, MyPageBar } from '../../pages/styles/MyPage.styles';\r\nimport { IGovernType } from '../../types/components/Govern.types';\r\nimport {\r\n  getMethodReturnStructType,\r\n  getParsedDataFromUsingMethodType,\r\n} from '../../utils/abiTypeFilter';\r\nimport { callContract } from '../../utils/KAS';\r\n\r\nconst MyPageGovern = () => {\r\n  const [governList, setGovernList] = React.useState<IGovernType[]>([]);\r\n  React.useEffect(() => {\r\n    const test = async () => {\r\n      try {\r\n        const getPollsLength = await callContract({\r\n          contractName: 'Govern',\r\n          contractAddress: contractAddressTable['Govern'],\r\n          methodName: 'getPollsLength',\r\n        });\r\n        // console.log('getPollsLength : ', getPollsLength);\r\n        const result: Array<IGovernType> = [];\r\n        const type = getMethodReturnStructType({\r\n          contractName: 'Govern',\r\n          methodName: 'getPollState',\r\n        });\r\n        for (let i = getPollsLength - 1; i >= 0; i--) {\r\n          const [pollState, withdrawableBalance, totalSupply] =\r\n            await Promise.all([\r\n              await callContract({\r\n                contractName: 'Govern',\r\n                contractAddress: contractAddressTable['Govern'],\r\n                methodName: 'getPollState',\r\n                parameters: [i],\r\n              }),\r\n              await callContract({\r\n                contractName: 'Govern',\r\n                contractAddress: contractAddressTable['Govern'],\r\n                methodName: 'withdrawableBalance',\r\n                parameters: [i],\r\n                kaikas: true,\r\n              }),\r\n              await callContract({\r\n                contractName: 'Govern',\r\n                contractAddress: contractAddressTable['Govern'],\r\n                methodName: 'getTotalSupply',\r\n              }),\r\n            ]);\r\n          const pollStateObj: IGovernType = getParsedDataFromUsingMethodType({\r\n            type,\r\n            value: pollState,\r\n            totalSupply,\r\n          });\r\n          pollStateObj['withdrawableBalance'] = withdrawableBalance;\r\n          // console.log('test : type', pollStateObj);\r\n          if (withdrawableBalance > 0) {\r\n            result.push(pollStateObj);\r\n          }\r\n        }\r\n        setGovernList(result);\r\n      } catch (error) {\r\n        // console.log(error);\r\n      }\r\n    };\r\n    test();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {governList.map(\r\n        ({\r\n          pollId,\r\n          title,\r\n          agree,\r\n          disagree,\r\n          endTime,\r\n          totalSupply,\r\n        }: IGovernType) => {\r\n          return (\r\n            <MyPageItem key={'myPageItem' + title}>\r\n              <div>{title}</div>\r\n              <MyPageBar\r\n                className=\"mypage__bar\"\r\n                yes={agree as number}\r\n                no={disagree as number}\r\n                totalSupply={totalSupply as string}\r\n              >\r\n                <div></div>\r\n                <div></div>\r\n              </MyPageBar>\r\n              <div>\r\n                <Moment fromNow>\r\n                  {+(endTime as unknown as number) * 1000}\r\n                </Moment>\r\n              </div>\r\n            </MyPageItem>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MyPageGovern;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { MyPageWrapper, MyPageList, MyPageItem } from './styles/MyPage.styles';\r\n\r\nimport { callContract, getBalance } from '../utils/KAS';\r\n\r\nimport {\r\n  contractAddressTable,\r\n  kStockTokenAddressTable,\r\n  exchangeAddressTable,\r\n} from './../constants';\r\n\r\nimport Caver from 'caver-js';\r\nimport MyPagePoolItem from '../components/MyPage/MyPagePoolItem';\r\nimport MyPageGovern from '../components/MyPage/MyPageGovern';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport StockLogo from './../components/StockLogo/StockLogo';\r\nimport { useDispatch } from 'react-redux';\r\nimport { onSelectNav } from '../store/user';\r\n\r\nconst caver = new Caver();\r\n\r\ninterface TokenListProps {\r\n  id: number;\r\n  name: string;\r\n  balance: number;\r\n  value: number;\r\n}\r\n\r\nexport interface PoolListProps {\r\n  id: number;\r\n  name: string;\r\n  lpToken: string;\r\n  balance: string;\r\n}\r\n\r\nconst MyPage = () => {\r\n  const [myList, setMyList] = useState<Array<TokenListProps>>([]);\r\n  const [myPoolList, setMyPoolList] = useState<Array<PoolListProps>>([]);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // console.log('window.klaytn.selectedAddress', window.klaytn.selectedAddress);\r\n    // get myList\r\n    const getMyList = async () => {\r\n      const valueTemp: Array<string> = await callContract({\r\n        contractName: 'Oracle',\r\n        contractAddress: contractAddressTable.Oracle,\r\n        methodName: 'getOraclePrice',\r\n      });\r\n      const nameTable = Object.keys(kStockTokenAddressTable);\r\n      const tokenPriceList = [];\r\n      const myList: any = [];\r\n      for (let i = 0; i < nameTable.length; i++) {\r\n        tokenPriceList.push(\r\n          callContract({\r\n            contractName: 'KStockToken',\r\n            contractAddress: kStockTokenAddressTable[nameTable[i]],\r\n            methodName: 'balanceOf',\r\n            parameters: [window.klaytn.selectedAddress],\r\n          }).then((res) => {\r\n            if (res > 0) {\r\n              // console.log('nameTable', nameTable[i]);\r\n              myList.push({\r\n                id: i,\r\n                name: nameTable[i],\r\n                balance: res / 1000000000000000000,\r\n                value: Number(valueTemp[i]) / 1000000000000000000,\r\n              });\r\n            }\r\n          })\r\n        ); // array 삽입);\r\n      }\r\n      // const res = await Promise.all(tokenPriceList);\r\n      // 위의 포문으로 배열 i개 삽입 후 setMyList\r\n      // Promise.all(p[1], p[2]);\r\n      await Promise.all(tokenPriceList);\r\n      setMyList(myList);\r\n    };\r\n    const getPoolList = async () => {\r\n      // 각 pool에 balanceOf를 통해 Lp토큰을 확인 후, 보유중인 list를 {name: kSSE, lpAmount: lp토큰 수량}의 list로 저장\r\n      const promiseGetEachBalance: Array<Promise<any>> = [];\r\n      const poolToSearch: any = [];\r\n      Object.entries(exchangeAddressTable).forEach((pair: Array<string>) => {\r\n        // pair[0] key, pair[1] value\r\n        promiseGetEachBalance.push(\r\n          callContract({\r\n            contractName: 'Exchange',\r\n            contractAddress: pair[1],\r\n            methodName: 'balanceOf',\r\n            parameters: [window.klaytn.selectedAddress],\r\n          }).then((res) => {\r\n            if (res > 0) {\r\n              poolToSearch.push({ name: pair[0], lpAmount: res });\r\n            }\r\n\r\n            // console.log(pair[0], ' Exchange balance is ', res);\r\n          })\r\n        );\r\n      });\r\n      await Promise.all(promiseGetEachBalance);\r\n      // console.log('Pool to search list :', poolToSearch);\r\n\r\n      // list 중 하나를 뽑아와 pool내 klay, pool내 kStock토큰수, total LP를 뽑은 후 {name: kSSE, lpAmount: 100, poolKlay: 10000, poolKStock: 200, totalSupply: 200}\r\n      // poolToSearh :[{name: kSSE, lpAmount: lp토큰 수량}, ... ]\r\n      // const promiseList: any = [];\r\n      const myTempPool: any = [];\r\n\r\n      poolToSearch.forEach(async (item: any, index: number) => {\r\n        const promiseTemp: Array<Promise<any>> = [];\r\n\r\n        // 1.pool내 klay\r\n        let poolKlay: string;\r\n        promiseTemp.push(\r\n          getBalance({\r\n            address: exchangeAddressTable[item.name],\r\n          }).then((res) => {\r\n            poolKlay = res;\r\n          })\r\n        );\r\n\r\n        // 2.pool내 kStock토큰 수\r\n        let poolKStock: string;\r\n        promiseTemp.push(\r\n          callContract({\r\n            contractName: 'KStockToken',\r\n            contractAddress: kStockTokenAddressTable[item.name],\r\n            methodName: 'balanceOf',\r\n            parameters: [exchangeAddressTable[item.name]],\r\n          }).then((res) => {\r\n            poolKStock = res;\r\n          })\r\n        );\r\n\r\n        // 3.totalLP\r\n        let totalLP: string;\r\n        promiseTemp.push(\r\n          callContract({\r\n            contractName: 'Exchange',\r\n            contractAddress: exchangeAddressTable[item.name],\r\n            methodName: 'totalSupply',\r\n          }).then((res) => {\r\n            totalLP = res;\r\n          })\r\n        );\r\n\r\n        // 모두 가져온 후 push\r\n        Promise.all(promiseTemp).then(() => {\r\n          // console.log('Pool promise', promiseTemp);\r\n          const ratio = Number(item.lpAmount) / Number(totalLP);\r\n          myTempPool.push({\r\n            id: index,\r\n            name: item.name,\r\n            lpToken: caver.utils.convertFromPeb(\r\n              item.lpAmount.slice(0, -15),\r\n              'kpeb'\r\n            ), // 소숫점 3개 버림\r\n            balance: `${(\r\n              (Number(poolKlay) * ratio) /\r\n              1000000000000000000\r\n            ).toLocaleString('ko-KR')}KLY + ${(\r\n              (Number(poolKStock) * ratio) /\r\n              1000000000000000000\r\n            ).toLocaleString('ko-KR')}${item.name} `,\r\n          });\r\n          // console.log('myTempPool', myTempPool);\r\n          setMyPoolList([...myTempPool]);\r\n          // console.log('myPoolList', myPoolList);\r\n        });\r\n      });\r\n    };\r\n\r\n    // Promise.all(promiseList).then(() => {\r\n    //   console.log('dd Pool');\r\n    // });\r\n\r\n    // list 중 하나를 뽑아와 ROI 계산\r\n    //     위의 데이터를 가지고 myPoolList에 push({id: , name:, value:(KLY + kSSE), ROI})\r\n\r\n    getMyList();\r\n    getPoolList();\r\n  }, [window.klaytn.selectedAddress]);\r\n\r\n  const onClickMyListHandler = (name: string) => {\r\n    navigate(`/swap/${name}`);\r\n    dispatch(onSelectNav('swap'));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MyPageWrapper>\r\n        <h2 className=\"tit\">Asset</h2>\r\n        <MyPageList>\r\n          <div>\r\n            <span>Token</span>\r\n            <span className=\"asset__balance\">Balance</span>\r\n            <span className=\"asset__value\">Value</span>\r\n            <span>Total</span>\r\n          </div>\r\n          {myList\r\n            .sort((a, b) => a.id - b.id)\r\n            .map((el: TokenListProps) => (\r\n              <MyPageItem\r\n                key={el.id}\r\n                onClick={() => onClickMyListHandler(el.name)}\r\n              >\r\n                <div>\r\n                  <StockLogo stockName={el.name} />\r\n                  {el.name}\r\n                </div>\r\n                <div>{el.balance.toLocaleString('ko-KR')}</div>\r\n                <div className=\"asset__value\">\r\n                  {el.value.toLocaleString('ko-KR')}\r\n                  <StockLogo stockName={'KLAY'} />\r\n                </div>\r\n                <div>\r\n                  {(el.balance * el.value).toLocaleString('ko-KR')}\r\n                  <StockLogo stockName={'KLAY'} />\r\n                </div>\r\n              </MyPageItem>\r\n            ))}\r\n        </MyPageList>\r\n        <h2 className=\"subtit\">Pool</h2>\r\n        <MyPageList>\r\n          <div>\r\n            <span>Pool</span>\r\n            <span>LPToken</span>\r\n            <span className=\"pool__balance\">Balance</span>\r\n            <span>ROI</span>\r\n          </div>\r\n          {myPoolList\r\n            .sort((a, b) => a.id - b.id)\r\n            .map(({ id, ...el }) => (\r\n              <MyPagePoolItem key={id} id={id} {...el} />\r\n            ))}\r\n        </MyPageList>\r\n        <h2 className=\"subtit\">Govern</h2>\r\n        <MyPageList>\r\n          <div>\r\n            <span>Gover ID</span>\r\n            <span>End Time</span>\r\n          </div>\r\n          <MyPageGovern />\r\n        </MyPageList>\r\n      </MyPageWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const GovernPageWrapper = styled.div`\r\n  max-width: var(--width);\r\n  margin: 0 auto;\r\n  color: var(--dark-green);\r\n`;\r\n\r\nexport const GovernPageGovernList = styled.div`\r\n  display: flex;\r\n\r\n  & h3 {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  & > div {\r\n    width: 100%;\r\n    height: 20rem;\r\n    margin: 0.5rem;\r\n    padding: 3rem;\r\n    border-radius: 0.5rem;\r\n    background-color: var(--white);\r\n    box-shadow: var(--shadowSharp);\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & > div:first-of-type {\r\n    flex: 2;\r\n\r\n    @media (max-width: 1023px) {\r\n      flex: auto;\r\n    }\r\n  }\r\n\r\n  & > div:last-of-type {\r\n    flex: 1;\r\n\r\n    @media (max-width: 1023px) {\r\n      flex: auto;\r\n    }\r\n  }\r\n\r\n  & > div > div > p {\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: var(--deep-green);\r\n  }\r\n\r\n  & > div > div > div {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n  }\r\n\r\n  & button {\r\n    width: 100%;\r\n    height: 3rem;\r\n    margin-top: 1rem;\r\n    border: 0;\r\n    border-radius: 0.5rem;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n    background-color: var(--dark-green);\r\n    box-shadow: var(--shadowSharp);\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nexport const GovernPagePollList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  & > div:hover {\r\n    cursor: pointer;\r\n    border: solid 2px #66adff;\r\n  }\r\n`;\r\n\r\nexport const GovernPagePollItem = styled.div<{\r\n  isExpired?: boolean | undefined;\r\n  enoughQuorum?: boolean | undefined;\r\n  yes: number;\r\n  no: number;\r\n}>`\r\n  width: calc(50% - 1rem);\r\n  height: 12rem;\r\n  margin: 0.5rem;\r\n  padding: 2rem;\r\n  border-radius: 0.5rem;\r\n  background-color: var(--white);\r\n  opacity: ${(props) => (props.isExpired === true ? '0.5' : '1')};\r\n\r\n  transition: border-color 0.2s;\r\n  border: 2px solid transparent;\r\n\r\n  & > section > div {\r\n    font-weight: 600;\r\n    color: ${(props) =>\r\n      !props.isExpired\r\n        ? 'var(--green)'\r\n        : props.enoughQuorum && props.yes > props.no\r\n        ? 'var(--blue)'\r\n        : 'var(--red)'};\r\n  }\r\n\r\n  & > section > span {\r\n    display: block;\r\n    margin-top: 1rem;\r\n    width: inherit;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n\r\n    & b {\r\n      font-size: 1rem;\r\n      font-weight: 400;\r\n    }\r\n\r\n    & em {\r\n      margin-left: 0.2rem;\r\n      color: var(--deep-green);\r\n      font-weight: 700;\r\n      font-size: 1.3rem;\r\n      font-style: normal;\r\n    }\r\n  }\r\n\r\n  & > p {\r\n    color: var(--deep-green);\r\n  }\r\n\r\n  & ::hover {\r\n    border: solid 1px #66adff;\r\n  }\r\n\r\n  & > div:last-child {\r\n    margin-top: 0.6rem;\r\n    text-align: right;\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    margin: 0.5rem 0;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const GovernPageBar = styled.div<{\r\n  yes: number;\r\n  no: number;\r\n  totalSupply: string;\r\n}>`\r\n  display: flex;\r\n  min-width: 100%;\r\n  height: 1rem;\r\n  border: 1px solid var(--dark-green);\r\n\r\n  & > div {\r\n    &:first-of-type {\r\n      width: ${(props) => {\r\n        const calcPercent = (props.yes / +props.totalSupply) * 100;\r\n        return `${calcPercent}%`;\r\n      }};\r\n      background-color: var(--blue);\r\n    }\r\n\r\n    &:last-of-type {\r\n      width: ${(props) => {\r\n        const calcPercent = (props.no / +props.totalSupply) * 100;\r\n        return `${calcPercent}%`;\r\n      }};\r\n      background-color: var(--red);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GoverQuorum = styled.div<{ percentage: string }>`\r\n  position: relative;\r\n  margin-top: 1rem;\r\n  height: 30px;\r\n\r\n  & > div {\r\n    left: ${(props) => `${props.percentage}%`};\r\n    position: absolute;\r\n    top: 0;\r\n    color: var(--green);\r\n    font-size: inherit;\r\n    font-weight: 600;\r\n    height: 30px;\r\n    transform: translate(-50%);\r\n  }\r\n\r\n  & > div ::after {\r\n    content: '';\r\n    width: 2px;\r\n    height: 8px;\r\n    background: var(--green);\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const GovernPageModalContent = styled.div`\r\n  margin: 1rem 0;\r\n\r\n  & label {\r\n    display: block;\r\n    margin: 10px;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n\r\n  & > div > textarea {\r\n    width: 100%;\r\n    height: 5rem;\r\n    margin-bottom: 1rem;\r\n    padding: 0.5rem;\r\n    border: 0;\r\n    border-radius: 0.5rem;\r\n    box-shadow: var(--shadowSharp);\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n    background-color: var(--green);\r\n    outline: none;\r\n  }\r\n\r\n  & > div > input {\r\n    box-shadow: var(--shadowSharp);\r\n  }\r\n\r\n  & input {\r\n    width: 100%;\r\n    height: 2.5rem;\r\n    margin-bottom: 1rem;\r\n    padding: 0.5rem;\r\n    border: 0;\r\n    border-radius: 0.5rem;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n    background-color: var(--green);\r\n    outline: none;\r\n  }\r\n\r\n  & button {\r\n    width: 100%;\r\n    height: 3rem;\r\n    border: 0;\r\n    border-radius: 0.5rem;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n    background-color: var(--deep-green);\r\n    box-shadow: var(--shadowSharp);\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ModalBackDrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 10;\r\n`;\r\n\r\nexport const ModalWrapper = styled.div<{ width: number | undefined }>`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: ${(props) => (props.width === undefined ? '400' : props.width)}px;\r\n  max-height: 700px;\r\n  padding: 1rem;\r\n  border-radius: 1rem 0.5rem 0.5rem 1rem;\r\n  z-index: 999;\r\n  background: var(--white);\r\n  box-shadow: var(--shadowSharp);\r\n  overflow-y: scroll;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background-color: grey;\r\n    border-radius: 10px;\r\n    box-shadow: inset 0px 0px 5px white;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: #2f3542;\r\n    border-radius: 10px;\r\n    background-clip: padding-box;\r\n    border: 2px solid transparent;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n  margin: 15px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n`;\r\n\r\nexport const ModalCloseButton = styled.button`\r\n  border: none;\r\n  border-radius: 3px;\r\n  font-size: 1rem;\r\n  background: none;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {\r\n  ModalBackDrop,\r\n  ModalWrapper,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n} from './ModalPortal.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  closeModal: () => void;\r\n  modalContent: JSX.Element;\r\n  width?: number;\r\n}\r\n\r\nconst xMark = faXmark as IconProp;\r\n\r\nconst ModalPortal = ({\r\n  isOpen,\r\n  closeModal,\r\n  width,\r\n  modalContent,\r\n}: ModalProps) => {\r\n  const modal = (\r\n    <>\r\n      <ModalBackDrop onClick={closeModal} />\r\n      <ModalWrapper width={width}>\r\n        <ModalHeader>\r\n          <ModalCloseButton onClick={closeModal}>\r\n            <FontAwesomeIcon icon={xMark} />\r\n          </ModalCloseButton>\r\n        </ModalHeader>\r\n        {modalContent}\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n\r\n  return isOpen ? ReactDOM.createPortal(modal, document.body) : null;\r\n};\r\n\r\nexport default ModalPortal;\r\n","import { useState } from 'react';\r\n\r\nconst useModal = () => {\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return {\r\n    isOpen,\r\n    toggle,\r\n  };\r\n};\r\n\r\nexport default useModal;\r\n","import styled from 'styled-components';\r\n\r\nexport const PollForm = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 -10px 20px;\r\n`;\r\nexport const PollWrapper = styled.div`\r\n  flex: 1 1;\r\n  padding: 0 10px;\r\n`;\r\nexport const PollLabel = styled.label<{\r\n  isAgree: boolean | null;\r\n  value: string;\r\n}>`\r\n  display: flex !important;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: opacity 0.2s;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  height: 50px;\r\n  opacity: ${({ isAgree, value }) => {\r\n    if (isAgree === true && value === 'yes') {\r\n      return `1`;\r\n    } else if (isAgree === false && value === 'no') {\r\n      return `1`;\r\n    } else {\r\n      return '0.25';\r\n    }\r\n  }};\r\n  text-transform: uppercase;\r\n\r\n  border-color: ${({ value }) => {\r\n    if (value === 'yes') {\r\n      return `#66adff`;\r\n    } else if (value === 'no') {\r\n      return `#f15e7e`;\r\n    }\r\n  }};\r\n  color: ${({ value }) => {\r\n    if (value === 'yes') {\r\n      return `#66adff`;\r\n    } else if (value === 'no') {\r\n      return `#f15e7e`;\r\n    }\r\n  }};\r\n`;\r\nexport const PollInput = styled.input`\r\n  border: 0;\r\n  padding: 0;\r\n  outline: 0;\r\n  background: transparent;\r\n  color: inherit;\r\n  font: inherit;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {\r\n  SingleInputContainer,\r\n  SingleInputWrapper,\r\n} from './styles/SingleInput.styles';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n  PollInput,\r\n  PollForm,\r\n  PollWrapper,\r\n  PollLabel,\r\n} from './styles/GovernInput.styles';\r\n\r\nimport ToastPortal from '../portal/ToastPortal';\r\nimport useInput from '../../hooks/useInput';\r\n\r\nimport { callCaver, sendContract } from '../../utils/KAS';\r\nimport { contractAddressTable } from '../../constants';\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n  pollId: string;\r\n}\r\n\r\nconst GovernInput = ({ children, pollId }: LayoutProps) => {\r\n  const tokenName = 'Kameleon';\r\n  const numberOfDecimal = 18;\r\n  const {\r\n    tokenBalance,\r\n    isFocus,\r\n    isBlankError,\r\n    isDecimalError,\r\n    setKey,\r\n    setIsFocus,\r\n    changeInput,\r\n  } = useInput(numberOfDecimal);\r\n\r\n  const [isAgree, setIsAgree] = useState<boolean | null>(null);\r\n  const [yesFocus, setYesFocus] = useState<boolean>(false);\r\n  const [noFocus, setNoFocus] = useState<boolean>(false);\r\n  const successNotify = () => toast.success('SUCCESS!!!');\r\n  const failNotify = () => toast.error('FAIL!!!');\r\n\r\n  const yesOnClickHander = () => {\r\n    if (yesFocus === true) {\r\n      setYesFocus(false);\r\n      setIsAgree(null);\r\n    } else {\r\n      setIsAgree(true);\r\n      setYesFocus(true);\r\n      setNoFocus(false);\r\n    }\r\n  };\r\n  const noOnClickHander = () => {\r\n    if (noFocus === true) {\r\n      setNoFocus(false);\r\n      setIsAgree(null);\r\n    } else {\r\n      setIsAgree(false);\r\n      setNoFocus(true);\r\n      setYesFocus(false);\r\n    }\r\n  };\r\n\r\n  const buttonOnClickHander = async () => {\r\n    if (isAgree !== null) {\r\n      const result = await sendContract({\r\n        contractName: 'Govern',\r\n        contractAddress: contractAddressTable['Govern'],\r\n        methodName: 'vote',\r\n        parameters: [\r\n          pollId,\r\n          callCaver.utils.convertToPeb(tokenBalance, 'KLAY'),\r\n          isAgree,\r\n        ],\r\n      });\r\n\r\n      if (result instanceof Error === false) {\r\n        successNotify();\r\n      } else {\r\n        failNotify();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PollForm>\r\n        <PollWrapper>\r\n          <PollInput\r\n            type=\"radio\"\r\n            name=\"answer\"\r\n            id=\"yes\"\r\n            hidden={true}\r\n            onClick={yesOnClickHander}\r\n            value=\"yes\"\r\n          />\r\n          <PollLabel isAgree={isAgree} value={'yes'} htmlFor=\"yes\">\r\n            yes\r\n          </PollLabel>\r\n        </PollWrapper>\r\n        <PollWrapper>\r\n          <PollInput\r\n            type=\"radio\"\r\n            name=\"answer\"\r\n            id=\"no\"\r\n            hidden={true}\r\n            onClick={noOnClickHander}\r\n            value=\"no\"\r\n          />\r\n          <PollLabel isAgree={isAgree} value={'no'} htmlFor=\"no\">\r\n            no\r\n          </PollLabel>\r\n        </PollWrapper>\r\n      </PollForm>\r\n      <SingleInputContainer\r\n        isFocus={isFocus}\r\n        isError={isBlankError || isDecimalError}\r\n      >\r\n        <div>\r\n          <label htmlFor=\"input\">{children}</label>\r\n          <SingleInputWrapper>\r\n            <section>\r\n              <div>{tokenName}</div>\r\n            </section>\r\n            <input\r\n              placeholder=\"0.00\"\r\n              id=\"input\"\r\n              autoComplete=\"off\"\r\n              value={tokenBalance}\r\n              onKeyDown={(e) => setKey(e.key)}\r\n              onChange={(e) => changeInput(e)}\r\n              onFocus={() => setIsFocus(true)}\r\n              onBlur={() => setIsFocus(false)}\r\n            />\r\n          </SingleInputWrapper>\r\n        </div>\r\n        {/* 에러 메세지 */}\r\n        {isDecimalError && (\r\n          <section>\r\n            Amount must be within {numberOfDecimal} decimal points\r\n          </section>\r\n        )}\r\n        {isBlankError && <section>Required</section>}\r\n      </SingleInputContainer>\r\n      <br></br>\r\n      <button onClick={buttonOnClickHander}>vote</button>\r\n      <br></br>\r\n      <ToastPortal />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GovernInput;\r\n","import React from 'react';\r\nimport 'chart.js/auto';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst DoughnutChart = ({\r\n  agree,\r\n  disagree,\r\n  totalSupply,\r\n}: {\r\n  [x: string]: number;\r\n}) => {\r\n  const data = {\r\n    labels: ['Agree', 'Disaggree', 'other'],\r\n    datasets: [\r\n      {\r\n        label: 'My First Dataset',\r\n        data: [agree, disagree, totalSupply - agree - disagree],\r\n        backgroundColor: ['#6675FF', '#FF6363', '#999'],\r\n        hoverOffset: 3,\r\n      },\r\n    ],\r\n    reverse: true,\r\n  };\r\n\r\n  return (\r\n    <Doughnut\r\n      data={data}\r\n      height={'200rem'}\r\n      options={{ maintainAspectRatio: false }}\r\n    />\r\n  );\r\n};\r\nexport default DoughnutChart;\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport Moment from 'react-moment';\r\n\r\nimport 'moment/locale/ko';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { GovernPageModalContent } from '../../pages/styles/GovernPage.styles';\r\n\r\nimport ToastPortal from '../portal/ToastPortal';\r\nimport GovernInput from '../Input/GovernInput';\r\nimport DoughnutChart from '../Chart/DoughnutChart';\r\n\r\nimport { WithdrawableBalanceQueryHooks } from '../../hooks/QueryHooks/Govern';\r\nimport { IGovernPropsType } from '../../types/components/Govern.types';\r\nimport { contractAddressTable } from '../../constants';\r\nimport { sendContract } from '../../utils/KAS';\r\n\r\nconst PollModal = ({\r\n  pollId,\r\n  title,\r\n  content,\r\n  agree,\r\n  disagree,\r\n  totalSupply,\r\n  createdTime,\r\n  endTime,\r\n  expired,\r\n}: IGovernPropsType) => {\r\n  const [yes, no] = [+agree, +disagree];\r\n  const now = new Date().getTime();\r\n  const successNotify = () => toast.success('SUCCESS!!!');\r\n  const failNotify = () => toast.error('FAIL!!!');\r\n\r\n  const isExpired = now > +endTime * 1000 || expired === true;\r\n\r\n  const { isSuccess, data }: { data: number | undefined; isSuccess: boolean } =\r\n    WithdrawableBalanceQueryHooks({\r\n      key: pollId,\r\n      pollId,\r\n    });\r\n\r\n  const withdrawBalanceHander = async () => {\r\n    const result = await sendContract({\r\n      contractName: 'Govern',\r\n      contractAddress: contractAddressTable['Govern'],\r\n      methodName: 'withdrawBalance',\r\n      parameters: [+pollId],\r\n    });\r\n\r\n    if (result instanceof Error === false) {\r\n      successNotify();\r\n    } else {\r\n      failNotify();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <GovernPageModalContent>\r\n        {/* <div>\r\n          <label htmlFor=\"pollId\">pollId</label>\r\n          <div>{pollId}</div>\r\n        </div> */}\r\n        <div>\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input readOnly value={title}></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"content\">Content</label>\r\n          <textarea readOnly value={content}></textarea>\r\n        </div>\r\n        <div>\r\n          <DoughnutChart\r\n            agree={+agree / 10 ** 18}\r\n            disagree={+disagree / 10 ** 18}\r\n            totalSupply={+totalSupply / 10 ** 18}\r\n          />\r\n        </div>\r\n        <div>\r\n          {/* <label htmlFor=\"time\">time</label> */}\r\n          <div>\r\n            {\r\n              <Moment format=\"YYYY-MM-DD HH:mm:ss\">\r\n                {+createdTime * 1000}\r\n              </Moment>\r\n            }{' '}\r\n            ~ {<Moment format=\"YYYY-MM-DD HH:mm:ss\">{+endTime * 1000}</Moment>}\r\n          </div>\r\n          <div>\r\n            투표 마감 : <Moment fromNow>{+endTime * 1000}</Moment> {`마감됨`}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {/* <label htmlFor=\"vote\">투표하기</label> */}\r\n          <GovernInput pollId={pollId}>AMOUNT</GovernInput>\r\n        </div>\r\n        <br></br>\r\n        {isSuccess && (\r\n          <>\r\n            <div>회수가능한 토큰: {data}</div>\r\n            <div>\r\n              {isExpired && (\r\n                <button onClick={withdrawBalanceHander}>회수하기</button>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </GovernPageModalContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PollModal;\r\n","import { useQuery } from 'react-query';\r\nimport { callContract } from '../../utils/KAS';\r\nimport { contractAddressTable } from '../../constants';\r\nimport {\r\n  getMethodReturnStructType,\r\n  getParsedDataFromUsingMethodType,\r\n} from '../../utils/abiTypeFilter';\r\n\r\ntype inputType = {\r\n  key: string;\r\n  refetchInterval?: number;\r\n};\r\n\r\nconst GovernQueryHooks = ({ key, refetchInterval }: inputType) => {\r\n  return useQuery<any, Error>(\r\n    [key],\r\n    async () => {\r\n      try {\r\n        // const pollLength = await callContract({\r\n        //   contractName: 'Govern',\r\n        //   contractAddress: '0xb2E88b76B4Cb52cA5D655341E1c0626B49FAF3C2',\r\n        //   methodName: 'getPollsLength',\r\n        // });\r\n        // console.log('pollLength', typeof pollLength);\r\n        // // 0 이상인 시작 값 부터 10개 가져온다\r\n        // const startPollIndex = +pollLength > 10 ? +pollLength - 10 : 0;\r\n        // const callResult = await callContract({\r\n        //   contractName: 'Govern',\r\n        //   contractAddress: '0xb2E88b76B4Cb52cA5D655341E1c0626B49FAF3C2',\r\n        //   methodName: 'pollListPagenation',\r\n        //   parameters: [startPollIndex],\r\n        // });\r\n        const callResult = await callContract({\r\n          contractName: 'Govern',\r\n          contractAddress: contractAddressTable['Govern'],\r\n          methodName: 'pollList',\r\n        });\r\n        const totalSupplyResult = await callContract({\r\n          contractName: 'Govern',\r\n          contractAddress: contractAddressTable['Govern'],\r\n          methodName: 'getTotalSupply',\r\n        });\r\n        const pollListTypeArray = getMethodReturnStructType({\r\n          contractName: 'Govern',\r\n          methodName: 'pollList',\r\n        });\r\n        const objResult = callResult.map((v: string | boolean[]) => {\r\n          const temp = getParsedDataFromUsingMethodType({\r\n            type: pollListTypeArray,\r\n            value: v,\r\n            totalSupply: totalSupplyResult,\r\n          });\r\n          return temp;\r\n        });\r\n        // console.log(objResult);\r\n        return objResult;\r\n      } catch (error) {\r\n        // console.log(error);\r\n        return [];\r\n      }\r\n    },\r\n    {\r\n      refetchInterval,\r\n    }\r\n  );\r\n};\r\n\r\ntype WithdrawableBalanceType = {\r\n  key: string;\r\n  pollId: string;\r\n  refetchInterval?: number;\r\n};\r\n\r\nconst WithdrawableBalanceQueryHooks = ({\r\n  key,\r\n  pollId,\r\n  refetchInterval,\r\n}: WithdrawableBalanceType) => {\r\n  return useQuery<number, Error>(\r\n    ['WithdrawableBalanceQueryHooks', key],\r\n    async (): Promise<number> => {\r\n      try {\r\n        const callResult = await callContract({\r\n          contractName: 'Govern',\r\n          contractAddress: contractAddressTable['Govern'],\r\n          methodName: 'withdrawableBalance',\r\n          parameters: [+pollId],\r\n          kaikas: true,\r\n        });\r\n        // console.log('withdrawableBalance', callResult, pollId);\r\n        return callResult / 10 ** 18;\r\n      } catch (error) {\r\n        // console.log(error);\r\n        return -1;\r\n      }\r\n    },\r\n    {\r\n      refetchInterval,\r\n    }\r\n  );\r\n};\r\n\r\nconst TotalStakedBalanceHooks = ({\r\n  key,\r\n  refetchInterval = undefined,\r\n}: {\r\n  key: number | string;\r\n  refetchInterval?: number | undefined;\r\n}) => {\r\n  return useQuery<number, Error>(\r\n    ['totalStakedBalanceHooks', key],\r\n    async (): Promise<number> => {\r\n      try {\r\n        const governAddress = contractAddressTable['Govern'];\r\n        const result = await callContract({\r\n          contractName: 'Kameleon',\r\n          contractAddress: contractAddressTable['Kameleon'],\r\n          methodName: 'balanceOf',\r\n          parameters: [governAddress],\r\n        });\r\n        return +result / 10 ** 18;\r\n      } catch (error) {\r\n        // console.log(error);\r\n        return 0;\r\n      }\r\n    },\r\n    {\r\n      refetchInterval,\r\n    }\r\n  );\r\n};\r\nconst MyStakeBalanceHooks = ({\r\n  key,\r\n  account,\r\n  refetchInterval = undefined,\r\n}: {\r\n  key: number | string;\r\n  account: string;\r\n  refetchInterval?: number | undefined;\r\n}) => {\r\n  return useQuery<[number | string, number | string], Error>(\r\n    ['MyStakeBalanceHooks', key],\r\n    async (): Promise<any> => {\r\n      try {\r\n        const [staked, stakable] = await Promise.all([\r\n          (async () => {\r\n            const result = await callContract({\r\n              contractName: 'Govern',\r\n              contractAddress: contractAddressTable['Govern'],\r\n              methodName: 'getTotalHoldingBalance',\r\n              account,\r\n              kaikas: true,\r\n            });\r\n            if (result instanceof Error === false) {\r\n              return result / 10 ** 18;\r\n            } else {\r\n              return 0;\r\n            }\r\n          })(),\r\n          (async () => {\r\n            const result = await callContract({\r\n              contractName: 'Kameleon',\r\n              contractAddress: contractAddressTable['Kameleon'],\r\n              methodName: 'balanceOf',\r\n              parameters: [account],\r\n            });\r\n            if (result instanceof Error === false) {\r\n              return result / 10 ** 18;\r\n            } else {\r\n              return 0;\r\n            }\r\n          })(),\r\n        ]);\r\n        return {\r\n          staked,\r\n          stakable,\r\n        };\r\n      } catch (error) {\r\n        // console.log(error);\r\n        return 0;\r\n      }\r\n    },\r\n    {\r\n      refetchInterval,\r\n    }\r\n  );\r\n};\r\n\r\nexport {\r\n  GovernQueryHooks,\r\n  WithdrawableBalanceQueryHooks,\r\n  TotalStakedBalanceHooks,\r\n  MyStakeBalanceHooks,\r\n};\r\n","import React from 'react';\r\nimport useModal from '../../hooks/useModal';\r\nimport ModalPortal from '../portal/ModalPortal';\r\nimport PollModal from './PollModal';\r\nimport {\r\n  GovernPagePollItem,\r\n  GovernPageBar,\r\n  GoverQuorum,\r\n} from './../../pages/styles/GovernPage.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCheckToSlot,\r\n  faXmark,\r\n  faCheck,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport Moment from 'react-moment';\r\nimport { IGovernPropsType } from '../../types/components/Govern.types';\r\n\r\nconst Poll = (props: IGovernPropsType) => {\r\n  const {\r\n    title,\r\n    agree,\r\n    disagree,\r\n    totalSupply,\r\n    endTime,\r\n    expired,\r\n  }: IGovernPropsType = props;\r\n\r\n  const { isOpen, toggle } = useModal();\r\n\r\n  const [yes, no] = [+agree, +disagree];\r\n  const now = new Date().getTime();\r\n  const eTime = new Date(+endTime * 1000);\r\n\r\n  const isExpired = now > +endTime * 1000 || expired === true;\r\n  const isNotExpired = !isExpired;\r\n  const enoughQuorum = (yes + no) / +totalSupply > 0.2;\r\n  return (\r\n    <>\r\n      <GovernPagePollItem\r\n        onClick={toggle}\r\n        yes={yes}\r\n        no={no}\r\n        isExpired={isExpired}\r\n        enoughQuorum={enoughQuorum}\r\n      >\r\n        <section>\r\n          <div>\r\n            {isNotExpired ? (\r\n              <>\r\n                <FontAwesomeIcon icon={faCheckToSlot} /> IN PROGRESS\r\n              </>\r\n            ) : yes > no && enoughQuorum ? (\r\n              <>\r\n                <FontAwesomeIcon icon={faCheck} /> EXECUTED\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FontAwesomeIcon icon={faXmark} /> REJECTED\r\n              </>\r\n            )}\r\n          </div>\r\n          <span>\r\n            <b>TITLE :</b>\r\n            <em>{title}</em>\r\n          </span>\r\n        </section>\r\n        <GoverQuorum\r\n          percentage={process.env.REACT_APP_MINIMUM_VOTING_PERCENTAGE}\r\n        >\r\n          <div>\r\n            <span className=\"Progress_text__1yeph\">\r\n              Quorum {process.env.REACT_APP_MINIMUM_VOTING_PERCENTAGE}%\r\n            </span>\r\n          </div>\r\n        </GoverQuorum>\r\n        <GovernPageBar yes={yes} no={no} totalSupply={totalSupply}>\r\n          <div></div>\r\n          <div></div>\r\n        </GovernPageBar>\r\n\r\n        <div>\r\n          {`투표 마감 시간 : ${eTime.toLocaleString('ko')} ( `}\r\n          <Moment fromNow style={{ fontSize: '0.8rem' }}>\r\n            {+endTime * 1000}\r\n          </Moment>\r\n          {')'}\r\n        </div>\r\n      </GovernPagePollItem>\r\n      <ModalPortal\r\n        isOpen={isOpen}\r\n        closeModal={toggle}\r\n        width={400}\r\n        modalContent={<PollModal {...props}></PollModal>}\r\n      ></ModalPortal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Poll;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { GovernPageModalContent } from '../../pages/styles/GovernPage.styles';\r\n\r\nimport ToastPortal from '../portal/ToastPortal';\r\n\r\nimport { sendContract } from '../../utils/KAS';\r\nimport { contractAddressTable } from '../../constants';\r\n\r\nconst CreatePoll = () => {\r\n  const [title, setTitle] = useState<string>('');\r\n  const [content, setContent] = useState<string>('');\r\n  const [day, setDay] = useState<string>('');\r\n  const successNotify = () => toast.success('SUCCESS!!!');\r\n  const failNotify = () => toast.error('FAIL!!!');\r\n\r\n  const createPollHander = async () => {\r\n    const result = await sendContract({\r\n      contractName: 'Govern',\r\n      contractAddress: contractAddressTable['Govern'],\r\n      methodName: 'createPoll',\r\n      parameters: [title, content, +day],\r\n    });\r\n    if (result instanceof Error === false) {\r\n      successNotify();\r\n    } else {\r\n      failNotify();\r\n    }\r\n  };\r\n  return (\r\n    <GovernPageModalContent>\r\n      <div>\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input id=\"title\" onChange={(e) => setTitle(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"content\">Content</label>\r\n        <input id=\"content\" onChange={(e) => setContent(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"day\">Day</label>\r\n        <input\r\n          id=\"day\"\r\n          onChange={(e) => setDay(e.target.value)}\r\n          placeholder={'1day ~ 14day'}\r\n        />\r\n      </div>\r\n      <button onClick={createPollHander}>Create</button>\r\n      <ToastPortal />\r\n    </GovernPageModalContent>\r\n  );\r\n};\r\nexport default CreatePoll;\r\n","import React from 'react';\r\n\r\nimport {\r\n  GovernPageWrapper,\r\n  GovernPageGovernList,\r\n  GovernPagePollList,\r\n} from './styles/GovernPage.styles';\r\n\r\nimport ModalPortal from '../components/portal/ModalPortal';\r\nimport useModal from '../hooks/useModal';\r\n\r\nimport Poll from '../components/Govern/Poll';\r\nimport {\r\n  GovernQueryHooks,\r\n  TotalStakedBalanceHooks,\r\n  MyStakeBalanceHooks,\r\n} from '../hooks/QueryHooks/Govern';\r\nimport CreatePoll from '../components/Govern/CreatePoll';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { onSelectNav } from '../store/user';\r\n\r\ninterface RootState {\r\n  user: {\r\n    isLogin: boolean;\r\n    account: string;\r\n  };\r\n}\r\nconst GovernPage = () => {\r\n  const { isOpen, toggle } = useModal();\r\n  const dispatch = useDispatch();\r\n\r\n  const selectUser = (state: RootState) => state.user;\r\n  const user = useSelector(selectUser);\r\n\r\n  const tokenState: any = TotalStakedBalanceHooks({\r\n    key: 'GovernPage',\r\n  });\r\n  const myStakeBalance: any = MyStakeBalanceHooks({\r\n    key: 'GovernPage',\r\n    account: user.account,\r\n  });\r\n  const {\r\n    isLoading,\r\n    isError,\r\n    data: governList,\r\n  } = GovernQueryHooks({\r\n    key: 'GovernPage',\r\n  });\r\n\r\n  if (isLoading) {\r\n    return <div>isLoading</div>;\r\n  }\r\n  if (isError) {\r\n    return <div>isError</div>;\r\n  }\r\n\r\n  return (\r\n    <GovernPageWrapper>\r\n      <h2 className=\"tit\">Govern</h2>\r\n      <GovernPageGovernList>\r\n        <div>\r\n          <h3>KMT</h3>\r\n          <div>\r\n            <p>TOTAL STAKED</p>\r\n            <div>{tokenState?.data} KMT</div>\r\n          </div>\r\n          <button onClick={toggle}>Create Poll</button>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <p>MY STAKED</p>\r\n            <div>{myStakeBalance?.data?.staked} KMT</div>\r\n          </div>\r\n          <div>\r\n            <p>MY STAKABLE</p>\r\n            <div>{myStakeBalance?.data?.stakable} KMT</div>\r\n          </div>\r\n          <Link to={`/myPage`} onClick={() => dispatch(onSelectNav('mypage'))}>\r\n            <button>Manage Stake</button>\r\n          </Link>\r\n        </div>\r\n      </GovernPageGovernList>\r\n      <h4>Polls</h4>\r\n      <GovernPagePollList>\r\n        {governList.map(({ id, ...el }: any, idx: number) => {\r\n          return <Poll key={idx} pollId={id} {...el} />;\r\n        })}\r\n      </GovernPagePollList>\r\n      <ModalPortal\r\n        isOpen={isOpen}\r\n        closeModal={toggle}\r\n        modalContent={<CreatePoll />}\r\n      ></ModalPortal>\r\n    </GovernPageWrapper>\r\n  );\r\n};\r\n\r\nexport default GovernPage;\r\n","export default __webpack_public_path__ + \"static/media/snake2.fa63d762.svg\";","export default __webpack_public_path__ + \"static/media/backgroundKameleon.e69351d9.svg\";","export default __webpack_public_path__ + \"static/media/Kameleon.acabd1a0.svg\";","export default __webpack_public_path__ + \"static/media/Line.ead42e53.svg\";","export default __webpack_public_path__ + \"static/media/Mosquito.580b85c9.svg\";","import Styled from 'styled-components';\r\n\r\nexport const ParallaxContainerWrapper = Styled.span`\r\n  position:absolute;\r\n  top:0;\r\n  left:0; \r\n`;\r\n\r\nexport const ChameleonContainer = Styled.div`\r\n  display:block;\r\n  position:fixed;\r\n  margin:40px;\r\n  right:0;\r\n  bottom:0;\r\n  & > span > img{\r\n    width:10rem;\r\n  }\r\n  @media (max-width: 760px) {\r\n    display:none;\r\n  }\r\n`;\r\nexport const SnakeContainer = Styled.div`\r\ndisplay:block;\r\n  position:fixed;\r\n  margin:40px;\r\n  left:0;\r\n  bottom:0;\r\n  & > span > img{\r\n    width:10rem;\r\n  }\r\n  @media (max-width: 760px) {\r\n    display:none;\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport Styled from 'styled-components';\r\nimport Parallax from 'parallax-js';\r\n\r\nimport tree1 from './../../assets/tree1.svg';\r\nimport tree2 from './../../assets/tree2.svg';\r\nimport snake1 from './../../assets/snake1.svg';\r\nimport snake2 from './../../assets/snake2.svg';\r\nimport backgroundKameleon from './../../assets/backgroundKameleon.svg';\r\nimport kameleon from './../../assets/Kameleon.svg';\r\nimport line from './../../assets/Line.svg';\r\nimport mosquito from './../../assets/Mosquito.svg';\r\nimport {\r\n  ChameleonContainer,\r\n  ParallaxContainerWrapper,\r\n  SnakeContainer,\r\n} from './styles/ParallaxContainer.styles';\r\n\r\nconst layers = [\r\n  {\r\n    name: 'astronaut',\r\n    image: backgroundKameleon,\r\n    dataDepth: '-0.05',\r\n    width: '200px',\r\n    height: '200px',\r\n  },\r\n  {\r\n    name: 'planet1',\r\n    image: kameleon,\r\n    dataDepth: '1',\r\n    width: '200px',\r\n    height: '200px',\r\n  },\r\n  {\r\n    name: 'planet2',\r\n    image: line,\r\n    dataDepth: '0.1',\r\n    width: '200px',\r\n    height: '200px',\r\n  },\r\n  {\r\n    name: 'rocket',\r\n    image: mosquito,\r\n    dataDepth: '0.1',\r\n    width: '200px',\r\n    height: '200px',\r\n  },\r\n];\r\n\r\nconst layers2 = [\r\n  {\r\n    name: 'snake2',\r\n    image: snake2,\r\n    dataDepth: '-1',\r\n    width: '200px',\r\n    height: '200px',\r\n  },\r\n];\r\n\r\nconst ParallaxImagesContainer = () => {\r\n  useEffect(() => {\r\n    const kameleon = document.getElementById('kameleon') as HTMLElement;\r\n    const snake = document.getElementById('snake') as HTMLElement;\r\n    new Parallax(kameleon);\r\n    new Parallax(snake);\r\n  });\r\n\r\n  return (\r\n    <ParallaxContainerWrapper>\r\n      <ChameleonContainer>\r\n        <span id=\"kameleon\">\r\n          {layers.map((l, index) => (\r\n            <img\r\n              key={index}\r\n              data-depth={l.dataDepth}\r\n              src={l.image}\r\n              alt={l.name}\r\n              width={l.width}\r\n              height={l.height}\r\n            />\r\n          ))}\r\n        </span>\r\n      </ChameleonContainer>\r\n      <SnakeContainer>\r\n        <span id=\"snake\">\r\n          {layers2.map((l, index) => (\r\n            <img\r\n              key={index}\r\n              data-depth={l.dataDepth}\r\n              src={l.image}\r\n              alt={l.name}\r\n              width={l.width}\r\n              height={l.height}\r\n            />\r\n          ))}\r\n        </span>\r\n      </SnakeContainer>\r\n    </ParallaxContainerWrapper>\r\n  );\r\n};\r\nexport default ParallaxImagesContainer;\r\n","import {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  useLocation,\r\n  Location,\r\n} from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { GlobalStyle, AppStyle, MainStyle } from './GlobalStyle';\r\nimport Header from './components/common/Header';\r\nimport Footer from './components/common/Footer';\r\n\r\nimport SwapPage from './pages/SwapPage';\r\nimport MainPage from './pages/MainPage';\r\nimport PoolPage from './pages/PoolPage';\r\nimport LiquidityPage from './pages/LiquidityPage';\r\nimport MintPage from './pages/MintPage';\r\nimport MyPage from './pages/MyPage';\r\nimport GovernPage from './pages/GovernPage';\r\nimport ParallaxContainer from './components/Parallax/ParallaxContainer';\r\nimport React from 'react';\r\n\r\nconst Animation = () => {\r\n  const location: Location = useLocation();\r\n  const [displayLocation, setDisplayLocation] =\r\n    React.useState<Location>(location);\r\n  const [transitionStage, setTransistionStage] =\r\n    React.useState<string>('fadeIn');\r\n  React.useEffect(() => {\r\n    if (location !== displayLocation) setTransistionStage('fadeOut');\r\n  }, [location, displayLocation]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`${transitionStage}`}\r\n        onAnimationEnd={() => {\r\n          if (transitionStage === 'fadeOut') {\r\n            setTransistionStage('fadeIn');\r\n            setDisplayLocation(location);\r\n          }\r\n        }}\r\n      >\r\n        <Routes location={displayLocation}>\r\n          <Route path=\"/\" element={<MainPage />} />\r\n          <Route path=\"/swap\" element={<SwapPage />} />\r\n          <Route path=\"/swap/:token\" element={<SwapPage />} />\r\n          <Route path=\"/pool\" element={<PoolPage />} />\r\n          <Route path=\"/liquidity/:id\" element={<LiquidityPage />} />\r\n          <Route path=\"/mint\" element={<MintPage />} />\r\n          <Route path=\"/mypage\" element={<MyPage />} />\r\n          <Route path=\"/govern\" element={<GovernPage />} />\r\n        </Routes>\r\n      </div>\r\n\r\n      {/* <ToastContainer icon={false} /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <AppStyle>\r\n        <div>\r\n          <BrowserRouter>\r\n            <Header />\r\n            <MainStyle className=\"layout\">\r\n              <Animation />\r\n            </MainStyle>\r\n            <Footer />\r\n          </BrowserRouter>\r\n        </div>\r\n        <ParallaxContainer />\r\n      </AppStyle>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from 'axios';\r\n// 요청 인터셉터 추가하기\r\naxios.interceptors.request.use(\r\n  function (config) {\r\n    // console.log('axios interceptors request', config);\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // 요청 오류가 있는 작업 수행\r\n    // console.log('axios interceptors request', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 응답 인터셉터 추가하기\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    // 2xx 범위에 있는 상태 코드는 이 함수를 트리거 합니다.\r\n    // 응답 데이터가 있는 작업 수행\r\n    // console.log('axios interceptors response', response);\r\n    return response;\r\n  },\r\n  function (error) {\r\n    // 2xx 외의 범위에 있는 상태 코드는 이 함수를 트리거 합니다.\r\n    // 응답 오류가 있는 작업 수행\r\n    // console.log('axios interceptors response', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './user';\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  middleware: [thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './utils/axiosIntercepter';\r\nimport store from './store/store';\r\nimport { Provider } from 'react-redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { ReactQueryDevtools } from 'react-query/devtools';\r\n\r\nconst queryClient = new QueryClient();\r\nconst persistor = persistStore(store);\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <QueryClientProvider client={queryClient}>\r\n          <App />\r\n          <ReactQueryDevtools initialIsOpen={false} />\r\n        </QueryClientProvider>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}